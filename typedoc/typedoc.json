{
	"id": 0,
	"name": "es-ddd-components",
	"kind": 0,
	"flags": {},
	"children": [
		{
			"id": 149,
			"name": "AggregateCommandDefinition",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An object describing a command handled\nby an aggregate"
			},
			"typeParameter": [
				{
					"id": 150,
					"name": "Name",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 151,
					"name": "Input",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateCommandInput",
						"id": 164
					}
				},
				{
					"id": 152,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 153,
					"name": "Query",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryDefinition",
						"id": 105,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateQueryName",
								"id": 113
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "reference",
								"name": "AggregateQueryInput",
								"id": 114
							},
							{
								"type": "reference",
								"name": "AggregateQueryOutput",
								"id": 115
							}
						]
					}
				},
				{
					"id": 154,
					"name": "ErrorTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorTypeFactory",
						"id": 17,
						"typeArguments": [
							{
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							},
							{
								"type": "reference",
								"name": "CustomErrorData",
								"id": 5
							}
						]
					}
				},
				{
					"id": 155,
					"name": "EventTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							},
							{
								"type": "typeParameter",
								"name": "State"
							}
						]
					}
				},
				{
					"id": 156,
					"name": "RaisableError",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "unknown",
						"name": "ErrorTypeFactory[\"name\"]"
					}
				},
				{
					"id": 157,
					"name": "EmittableEvent",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "unknown",
						"name": "EventTypeFactory[\"name\"]"
					}
				}
			],
			"children": [
				{
					"id": 159,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "Aggregate/commands.types.ts",
							"line": 149,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 161,
					"name": "emittableEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/commands.types.ts",
							"line": 151,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"name": "ReadonlyArray",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "EmittableEvent",
								"constraint": {
									"type": "unknown",
									"name": "EventTypeFactory[\"name\"]"
								}
							}
						]
					}
				},
				{
					"id": 162,
					"name": "handler",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/commands.types.ts",
							"line": 152,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateCommandImplementation",
						"id": 165,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "Input",
								"constraint": {
									"type": "reference",
									"name": "AggregateCommandInput",
									"id": 164
								}
							},
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							},
							{
								"type": "typeParameter",
								"name": "Query",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryDefinition",
									"id": 105,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateQueryName",
											"id": 113
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "reference",
											"name": "AggregateQueryInput",
											"id": 114
										},
										{
											"type": "reference",
											"name": "AggregateQueryOutput",
											"id": 115
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "CustomErrorTypeFactory",
									"id": 17,
									"typeArguments": [
										{
											"type": "reference",
											"name": "CustomErrorName",
											"id": 4
										},
										{
											"type": "reference",
											"name": "CustomErrorData",
											"id": 5
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "EventTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "DomainEventTypeFactory",
									"id": 322,
									"typeArguments": [
										{
											"type": "reference",
											"name": "DomainEventName",
											"id": 331
										},
										{
											"type": "reference",
											"name": "DomaiEventPayload",
											"id": 332
										},
										{
											"type": "typeParameter",
											"name": "State"
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "RaisableError",
								"constraint": {
									"type": "unknown",
									"name": "ErrorTypeFactory[\"name\"]"
								}
							},
							{
								"type": "typeParameter",
								"name": "EmittableEvent",
								"constraint": {
									"type": "unknown",
									"name": "EventTypeFactory[\"name\"]"
								}
							}
						]
					}
				},
				{
					"id": 158,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/commands.types.ts",
							"line": 148,
							"character": 15
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "Name",
						"constraint": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 160,
					"name": "raisableErrors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/commands.types.ts",
							"line": 150,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "ReadonlyArray",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "RaisableError",
								"constraint": {
									"type": "unknown",
									"name": "ErrorTypeFactory[\"name\"]"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						159,
						161,
						162,
						158,
						160
					]
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/commands.types.ts",
					"line": 126,
					"character": 43
				}
			]
		},
		{
			"id": 242,
			"name": "AggregateDefinition",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An object describing an aggregate type"
			},
			"typeParameter": [
				{
					"id": 243,
					"name": "BC",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "BoundedContext",
						"id": 279
					}
				},
				{
					"id": 244,
					"name": "TypeName",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateTypeName",
						"id": 280
					}
				},
				{
					"id": 245,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 246,
					"name": "Query",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryDefinition",
						"id": 105,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateQueryName",
								"id": 113
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "reference",
								"name": "AggregateQueryInput",
								"id": 114
							},
							{
								"type": "reference",
								"name": "AggregateQueryOutput",
								"id": 115
							}
						]
					}
				},
				{
					"id": 247,
					"name": "ErrorTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorTypeFactory",
						"id": 17,
						"typeArguments": [
							{
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							},
							{
								"type": "reference",
								"name": "CustomErrorData",
								"id": 5
							}
						]
					}
				},
				{
					"id": 248,
					"name": "EventTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							},
							{
								"type": "typeParameter",
								"name": "State"
							}
						]
					}
				},
				{
					"id": 249,
					"name": "Command",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateCommandDefinition",
						"id": 149,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateCommandName",
								"id": 163
							},
							{
								"type": "reference",
								"name": "AggregateCommandInput",
								"id": 164
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "typeParameter",
								"name": "Query"
							},
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory"
							},
							{
								"type": "typeParameter",
								"name": "EventTypeFactory"
							},
							{
								"type": "unknown",
								"name": "ErrorTypeFactory[\"name\"]"
							},
							{
								"type": "unknown",
								"name": "EventTypeFactory[\"name\"]"
							}
						]
					}
				}
			],
			"children": [
				{
					"id": 255,
					"name": "commands",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A list of commands that implement the business logic of the aggregate.\nThe list will be tranformed into the aggregate's\n`.execute` interface"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 358,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "ReadonlyArray",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "Command",
								"constraint": {
									"type": "reference",
									"name": "AggregateCommandDefinition",
									"id": 149,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateCommandName",
											"id": 163
										},
										{
											"type": "reference",
											"name": "AggregateCommandInput",
											"id": 164
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "typeParameter",
											"name": "Query"
										},
										{
											"type": "typeParameter",
											"name": "ErrorTypeFactory"
										},
										{
											"type": "typeParameter",
											"name": "EventTypeFactory"
										},
										{
											"type": "unknown",
											"name": "ErrorTypeFactory[\"name\"]"
										},
										{
											"type": "unknown",
											"name": "EventTypeFactory[\"name\"]"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 250,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The name of the Bounded Context the aggregate belongs to"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 330,
							"character": 18
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "BC",
						"constraint": {
							"type": "reference",
							"name": "BoundedContext",
							"id": 279
						}
					}
				},
				{
					"id": 252,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional description of the aggregate."
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 340,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 262,
					"name": "deserializeState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A function to deserialize the internal state\nof the aggregate.\nDefaults to `JSON.parse`."
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 407,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "Deserializer",
						"id": 44,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							}
						]
					}
				},
				{
					"id": 257,
					"name": "errors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A list of factories that can be used to\ngenerate the errors that could be raised\nby the commands implementations.\nThe list will be used to craft the `.error` interface that\nwill be passed to each command implementation."
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 375,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "ReadonlyArray",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "CustomErrorTypeFactory",
									"id": 17,
									"typeArguments": [
										{
											"type": "reference",
											"name": "CustomErrorName",
											"id": 4
										},
										{
											"type": "reference",
											"name": "CustomErrorData",
											"id": 5
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 258,
					"name": "events",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A list of domain event factories.\nThe list will be used to craft the `.emit` interface that\nwill be passed to each command implementation"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 382,
							"character": 17
						}
					],
					"type": {
						"type": "reference",
						"name": "ReadonlyArray",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "EventTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "DomainEventTypeFactory",
									"id": 322,
									"typeArguments": [
										{
											"type": "reference",
											"name": "DomainEventName",
											"id": 331
										},
										{
											"type": "reference",
											"name": "DomaiEventPayload",
											"id": 332
										},
										{
											"type": "typeParameter",
											"name": "State"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 254,
					"name": "initialState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The initial state of the aggregate"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 351,
							"character": 23
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "State",
						"constraint": {
							"type": "reference",
							"name": "AggregateState",
							"id": 282
						}
					}
				},
				{
					"id": 256,
					"name": "queries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A list of queries, whose hanlers will have access to the\naggregate's internal state.\nThe list will be transormed into the aggregate's\n`.query` interface"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 366,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "ReadonlyArray",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "Query",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryDefinition",
									"id": 105,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateQueryName",
											"id": 113
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "reference",
											"name": "AggregateQueryInput",
											"id": 114
										},
										{
											"type": "reference",
											"name": "AggregateQueryOutput",
											"id": 115
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 261,
					"name": "serializeState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A function to serialize the internal state\nof the aggregate.\nDefaults to `JSON.stringify`."
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 400,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "Serializer",
						"id": 60,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							}
						]
					}
				},
				{
					"id": 253,
					"name": "singleton",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A flag to specify if this aggregate is supposed\nto be a \"singleton\" in your domain model"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 346,
							"character": 20
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 259,
					"name": "snapshotPrefix",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A prefix to use to generate the\nkey representing an aggregate snapshot."
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 388,
							"character": 25
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 260,
					"name": "snapshotThreshold",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "Threshold to tweak the snapshot frequency"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 393,
							"character": 28
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 251,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The name of the aggregate's type"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 335,
							"character": 15
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "TypeName",
						"constraint": {
							"type": "reference",
							"name": "AggregateTypeName",
							"id": 280
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						255,
						250,
						252,
						262,
						257,
						258,
						254,
						256,
						261,
						253,
						259,
						260,
						251
					]
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/types.ts",
					"line": 297,
					"character": 36
				}
			]
		},
		{
			"id": 493,
			"name": "AggregateIdentifier",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 494,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Repository/types.ts",
							"line": 12,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "BoundedContext",
						"id": 279
					}
				},
				{
					"id": 496,
					"name": "identity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Repository/types.ts",
							"line": 14,
							"character": 19
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateIdentity",
						"id": 281
					}
				},
				{
					"id": 495,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Repository/types.ts",
							"line": 13,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateTypeName",
						"id": 280
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						494,
						496,
						495
					]
				}
			],
			"sources": [
				{
					"fileName": "Repository/types.ts",
					"line": 11,
					"character": 36
				}
			]
		},
		{
			"id": 202,
			"name": "AggregateInstance",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An instance of an aggregate"
			},
			"typeParameter": [
				{
					"id": 203,
					"name": "BC",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "BoundedContext",
						"id": 279
					}
				},
				{
					"id": 204,
					"name": "TypeName",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateTypeName",
						"id": 280
					}
				},
				{
					"id": 205,
					"name": "Identity",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateIdentity",
						"id": 281
					}
				},
				{
					"id": 206,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 207,
					"name": "Query",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryDefinition",
						"id": 105,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateQueryName",
								"id": 113
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "reference",
								"name": "AggregateQueryInput",
								"id": 114
							},
							{
								"type": "reference",
								"name": "AggregateQueryOutput",
								"id": 115
							}
						]
					}
				},
				{
					"id": 208,
					"name": "ErrorTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorTypeFactory",
						"id": 17,
						"typeArguments": [
							{
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							},
							{
								"type": "reference",
								"name": "CustomErrorData",
								"id": 5
							}
						]
					}
				},
				{
					"id": 209,
					"name": "EventTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							},
							{
								"type": "typeParameter",
								"name": "State"
							}
						]
					}
				},
				{
					"id": 210,
					"name": "Command",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateCommandDefinition",
						"id": 149,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateCommandName",
								"id": 163
							},
							{
								"type": "reference",
								"name": "AggregateCommandInput",
								"id": 164
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "typeParameter",
								"name": "Query"
							},
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory"
							},
							{
								"type": "typeParameter",
								"name": "EventTypeFactory"
							},
							{
								"type": "unknown",
								"name": "ErrorTypeFactory[\"name\"]"
							},
							{
								"type": "unknown",
								"name": "EventTypeFactory[\"name\"]"
							}
						]
					}
				}
			],
			"children": [
				{
					"id": 226,
					"name": "New",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A reference to the factory which generated the instance"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 218,
							"character": 14
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateTypeFactory",
						"id": 263,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "BC",
								"constraint": {
									"type": "reference",
									"name": "BoundedContext",
									"id": 279
								}
							},
							{
								"type": "typeParameter",
								"name": "TypeName",
								"constraint": {
									"type": "reference",
									"name": "AggregateTypeName",
									"id": 280
								}
							},
							{
								"type": "typeParameter",
								"name": "Identity",
								"constraint": {
									"type": "reference",
									"name": "AggregateIdentity",
									"id": 281
								}
							},
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							},
							{
								"type": "typeParameter",
								"name": "Query",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryDefinition",
									"id": 105,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateQueryName",
											"id": 113
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "reference",
											"name": "AggregateQueryInput",
											"id": 114
										},
										{
											"type": "reference",
											"name": "AggregateQueryOutput",
											"id": 115
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "CustomErrorTypeFactory",
									"id": 17,
									"typeArguments": [
										{
											"type": "reference",
											"name": "CustomErrorName",
											"id": 4
										},
										{
											"type": "reference",
											"name": "CustomErrorData",
											"id": 5
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "EventTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "DomainEventTypeFactory",
									"id": 322,
									"typeArguments": [
										{
											"type": "reference",
											"name": "DomainEventName",
											"id": 331
										},
										{
											"type": "reference",
											"name": "DomaiEventPayload",
											"id": 332
										},
										{
											"type": "typeParameter",
											"name": "State"
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "Command",
								"constraint": {
									"type": "reference",
									"name": "AggregateCommandDefinition",
									"id": 149,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateCommandName",
											"id": 163
										},
										{
											"type": "reference",
											"name": "AggregateCommandInput",
											"id": 164
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "typeParameter",
											"name": "Query"
										},
										{
											"type": "typeParameter",
											"name": "ErrorTypeFactory"
										},
										{
											"type": "typeParameter",
											"name": "EventTypeFactory"
										},
										{
											"type": "unknown",
											"name": "ErrorTypeFactory[\"name\"]"
										},
										{
											"type": "unknown",
											"name": "EventTypeFactory[\"name\"]"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 219,
					"name": "appendEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A method to generate a new instance by\nadding new events to the aggregate's history"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 186,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 220,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 221,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 222,
											"name": "events",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ReadonlyArray",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SerializedDomainEvent",
														"id": 293
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "AggregateInstance",
										"id": 202,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "BC",
												"constraint": {
													"type": "reference",
													"name": "BoundedContext",
													"id": 279
												}
											},
											{
												"type": "typeParameter",
												"name": "TypeName",
												"constraint": {
													"type": "reference",
													"name": "AggregateTypeName",
													"id": 280
												}
											},
											{
												"type": "typeParameter",
												"name": "Identity",
												"constraint": {
													"type": "reference",
													"name": "AggregateIdentity",
													"id": 281
												}
											},
											{
												"type": "typeParameter",
												"name": "State",
												"constraint": {
													"type": "reference",
													"name": "AggregateState",
													"id": 282
												}
											},
											{
												"type": "typeParameter",
												"name": "Query",
												"constraint": {
													"type": "reference",
													"name": "AggregateQueryDefinition",
													"id": 105,
													"typeArguments": [
														{
															"type": "reference",
															"name": "AggregateQueryName",
															"id": 113
														},
														{
															"type": "typeParameter",
															"name": "State"
														},
														{
															"type": "reference",
															"name": "AggregateQueryInput",
															"id": 114
														},
														{
															"type": "reference",
															"name": "AggregateQueryOutput",
															"id": 115
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "ErrorTypeFactory",
												"constraint": {
													"type": "reference",
													"name": "CustomErrorTypeFactory",
													"id": 17,
													"typeArguments": [
														{
															"type": "reference",
															"name": "CustomErrorName",
															"id": 4
														},
														{
															"type": "reference",
															"name": "CustomErrorData",
															"id": 5
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "EventTypeFactory",
												"constraint": {
													"type": "reference",
													"name": "DomainEventTypeFactory",
													"id": 322,
													"typeArguments": [
														{
															"type": "reference",
															"name": "DomainEventName",
															"id": 331
														},
														{
															"type": "reference",
															"name": "DomaiEventPayload",
															"id": 332
														},
														{
															"type": "typeParameter",
															"name": "State"
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "Command",
												"constraint": {
													"type": "reference",
													"name": "AggregateCommandDefinition",
													"id": 149,
													"typeArguments": [
														{
															"type": "reference",
															"name": "AggregateCommandName",
															"id": 163
														},
														{
															"type": "reference",
															"name": "AggregateCommandInput",
															"id": 164
														},
														{
															"type": "typeParameter",
															"name": "State"
														},
														{
															"type": "typeParameter",
															"name": "Query"
														},
														{
															"type": "typeParameter",
															"name": "ErrorTypeFactory"
														},
														{
															"type": "typeParameter",
															"name": "EventTypeFactory"
														},
														{
															"type": "unknown",
															"name": "ErrorTypeFactory[\"name\"]"
														},
														{
															"type": "unknown",
															"name": "EventTypeFactory[\"name\"]"
														}
													]
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Aggregate/types.ts",
									"line": 186,
									"character": 24
								}
							]
						}
					}
				},
				{
					"id": 223,
					"name": "clone",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A method to get another instance of the same aggregate\nwith state and version as they where before any command\nwas executed"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 204,
							"character": 16
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 224,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 225,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AggregateInstance",
										"id": 202,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "BC",
												"constraint": {
													"type": "reference",
													"name": "BoundedContext",
													"id": 279
												}
											},
											{
												"type": "typeParameter",
												"name": "TypeName",
												"constraint": {
													"type": "reference",
													"name": "AggregateTypeName",
													"id": 280
												}
											},
											{
												"type": "typeParameter",
												"name": "Identity",
												"constraint": {
													"type": "reference",
													"name": "AggregateIdentity",
													"id": 281
												}
											},
											{
												"type": "typeParameter",
												"name": "State",
												"constraint": {
													"type": "reference",
													"name": "AggregateState",
													"id": 282
												}
											},
											{
												"type": "typeParameter",
												"name": "Query",
												"constraint": {
													"type": "reference",
													"name": "AggregateQueryDefinition",
													"id": 105,
													"typeArguments": [
														{
															"type": "reference",
															"name": "AggregateQueryName",
															"id": 113
														},
														{
															"type": "typeParameter",
															"name": "State"
														},
														{
															"type": "reference",
															"name": "AggregateQueryInput",
															"id": 114
														},
														{
															"type": "reference",
															"name": "AggregateQueryOutput",
															"id": 115
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "ErrorTypeFactory",
												"constraint": {
													"type": "reference",
													"name": "CustomErrorTypeFactory",
													"id": 17,
													"typeArguments": [
														{
															"type": "reference",
															"name": "CustomErrorName",
															"id": 4
														},
														{
															"type": "reference",
															"name": "CustomErrorData",
															"id": 5
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "EventTypeFactory",
												"constraint": {
													"type": "reference",
													"name": "DomainEventTypeFactory",
													"id": 322,
													"typeArguments": [
														{
															"type": "reference",
															"name": "DomainEventName",
															"id": 331
														},
														{
															"type": "reference",
															"name": "DomaiEventPayload",
															"id": 332
														},
														{
															"type": "typeParameter",
															"name": "State"
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "Command",
												"constraint": {
													"type": "reference",
													"name": "AggregateCommandDefinition",
													"id": 149,
													"typeArguments": [
														{
															"type": "reference",
															"name": "AggregateCommandName",
															"id": 163
														},
														{
															"type": "reference",
															"name": "AggregateCommandInput",
															"id": 164
														},
														{
															"type": "typeParameter",
															"name": "State"
														},
														{
															"type": "typeParameter",
															"name": "Query"
														},
														{
															"type": "typeParameter",
															"name": "ErrorTypeFactory"
														},
														{
															"type": "typeParameter",
															"name": "EventTypeFactory"
														},
														{
															"type": "unknown",
															"name": "ErrorTypeFactory[\"name\"]"
														},
														{
															"type": "unknown",
															"name": "EventTypeFactory[\"name\"]"
														}
													]
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Aggregate/types.ts",
									"line": 204,
									"character": 17
								}
							]
						}
					}
				},
				{
					"id": 211,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The name of the Bounded Context the aggregate belongs to"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 125,
							"character": 18
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "BC",
						"constraint": {
							"type": "reference",
							"name": "BoundedContext",
							"id": 279
						}
					}
				},
				{
					"id": 218,
					"name": "execute",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The commands interface of the aggregate"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 167,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateCommandInterface",
						"id": 191,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							},
							{
								"type": "typeParameter",
								"name": "Query",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryDefinition",
									"id": 105,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateQueryName",
											"id": 113
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "reference",
											"name": "AggregateQueryInput",
											"id": 114
										},
										{
											"type": "reference",
											"name": "AggregateQueryOutput",
											"id": 115
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "CustomErrorTypeFactory",
									"id": 17,
									"typeArguments": [
										{
											"type": "reference",
											"name": "CustomErrorName",
											"id": 4
										},
										{
											"type": "reference",
											"name": "CustomErrorData",
											"id": 5
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "EventTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "DomainEventTypeFactory",
									"id": 322,
									"typeArguments": [
										{
											"type": "reference",
											"name": "DomainEventName",
											"id": 331
										},
										{
											"type": "reference",
											"name": "DomaiEventPayload",
											"id": 332
										},
										{
											"type": "typeParameter",
											"name": "State"
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "Command",
								"constraint": {
									"type": "reference",
									"name": "AggregateCommandDefinition",
									"id": 149,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateCommandName",
											"id": 163
										},
										{
											"type": "reference",
											"name": "AggregateCommandInput",
											"id": 164
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "typeParameter",
											"name": "Query"
										},
										{
											"type": "typeParameter",
											"name": "ErrorTypeFactory"
										},
										{
											"type": "typeParameter",
											"name": "EventTypeFactory"
										},
										{
											"type": "unknown",
											"name": "ErrorTypeFactory[\"name\"]"
										},
										{
											"type": "unknown",
											"name": "EventTypeFactory[\"name\"]"
										}
									]
								}
							},
							{
								"type": "reference",
								"name": "AggregateCommandDictionary",
								"id": 185,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "State",
										"constraint": {
											"type": "reference",
											"name": "AggregateState",
											"id": 282
										}
									},
									{
										"type": "typeParameter",
										"name": "Query",
										"constraint": {
											"type": "reference",
											"name": "AggregateQueryDefinition",
											"id": 105,
											"typeArguments": [
												{
													"type": "reference",
													"name": "AggregateQueryName",
													"id": 113
												},
												{
													"type": "typeParameter",
													"name": "State"
												},
												{
													"type": "reference",
													"name": "AggregateQueryInput",
													"id": 114
												},
												{
													"type": "reference",
													"name": "AggregateQueryOutput",
													"id": 115
												}
											]
										}
									},
									{
										"type": "typeParameter",
										"name": "ErrorTypeFactory",
										"constraint": {
											"type": "reference",
											"name": "CustomErrorTypeFactory",
											"id": 17,
											"typeArguments": [
												{
													"type": "reference",
													"name": "CustomErrorName",
													"id": 4
												},
												{
													"type": "reference",
													"name": "CustomErrorData",
													"id": 5
												}
											]
										}
									},
									{
										"type": "typeParameter",
										"name": "EventTypeFactory",
										"constraint": {
											"type": "reference",
											"name": "DomainEventTypeFactory",
											"id": 322,
											"typeArguments": [
												{
													"type": "reference",
													"name": "DomainEventName",
													"id": 331
												},
												{
													"type": "reference",
													"name": "DomaiEventPayload",
													"id": 332
												},
												{
													"type": "typeParameter",
													"name": "State"
												}
											]
										}
									},
									{
										"type": "typeParameter",
										"name": "Command",
										"constraint": {
											"type": "reference",
											"name": "AggregateCommandDefinition",
											"id": 149,
											"typeArguments": [
												{
													"type": "reference",
													"name": "AggregateCommandName",
													"id": 163
												},
												{
													"type": "reference",
													"name": "AggregateCommandInput",
													"id": 164
												},
												{
													"type": "typeParameter",
													"name": "State"
												},
												{
													"type": "typeParameter",
													"name": "Query"
												},
												{
													"type": "typeParameter",
													"name": "ErrorTypeFactory"
												},
												{
													"type": "typeParameter",
													"name": "EventTypeFactory"
												},
												{
													"type": "unknown",
													"name": "ErrorTypeFactory[\"name\"]"
												},
												{
													"type": "unknown",
													"name": "EventTypeFactory[\"name\"]"
												}
											]
										}
									}
								]
							}
						]
					}
				},
				{
					"id": 233,
					"name": "getConsistencyPolicy",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A method to get the consistency policy that the repository\nshould observe when attempting to persist the aggregate"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 247,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 234,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 235,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ConsistencyPolicy",
										"id": 283
									}
								}
							],
							"sources": [
								{
									"fileName": "Aggregate/types.ts",
									"line": 247,
									"character": 32
								}
							]
						}
					}
				},
				{
					"id": 230,
					"name": "getNewEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A method to get the list of events emitted by the instance\nduring its lifecycle"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 239,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 231,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 232,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "ReadonlyArray",
										"typeArguments": [
											{
												"type": "reference",
												"name": "DomainEventInstance",
												"id": 296,
												"typeArguments": [
													{
														"type": "reference",
														"name": "DomainEventName",
														"id": 331
													},
													{
														"type": "reference",
														"name": "DomaiEventPayload",
														"id": 332
													},
													{
														"type": "typeParameter",
														"name": "State",
														"constraint": {
															"type": "reference",
															"name": "AggregateState",
															"id": 282
														}
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Aggregate/types.ts",
									"line": 239,
									"character": 24
								}
							]
						}
					}
				},
				{
					"id": 236,
					"name": "getSerializedState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A method to get the serialized version of the aggregate's internal state"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 252,
							"character": 29
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 237,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 238,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "Aggregate/types.ts",
									"line": 252,
									"character": 30
								}
							]
						}
					}
				},
				{
					"id": 239,
					"name": "getSnapshot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A method to get a snapshot of the aggregate's internal state\npaired with its current version."
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 258,
							"character": 22
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 240,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 241,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "AggregateSnapshot",
										"id": 199
									}
								}
							],
							"sources": [
								{
									"fileName": "Aggregate/types.ts",
									"line": 258,
									"character": 23
								}
							]
						}
					}
				},
				{
					"id": 213,
					"name": "identity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The identity of the aggregate"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 135,
							"character": 19
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "Identity",
						"constraint": {
							"type": "reference",
							"name": "AggregateIdentity",
							"id": 281
						}
					}
				},
				{
					"id": 227,
					"name": "isDirty",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A method to reveal if the instance produced new events\nduring its lifecycle"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 233,
							"character": 18
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 228,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 229,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"sources": [
								{
									"fileName": "Aggregate/types.ts",
									"line": 233,
									"character": 19
								}
							]
						}
					}
				},
				{
					"id": 215,
					"name": "needsSnapshot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Flag to signal if the instance should be snapshotted"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 147,
							"character": 24
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 217,
					"name": "query",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The query interface of the aggregate"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 158,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateQueryInterface",
						"id": 134,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							},
							{
								"type": "typeParameter",
								"name": "Query",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryDefinition",
									"id": 105,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateQueryName",
											"id": 113
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "reference",
											"name": "AggregateQueryInput",
											"id": 114
										},
										{
											"type": "reference",
											"name": "AggregateQueryOutput",
											"id": 115
										}
									]
								}
							},
							{
								"type": "reference",
								"name": "AggregateQueryDictionary",
								"id": 131,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "State",
										"constraint": {
											"type": "reference",
											"name": "AggregateState",
											"id": 282
										}
									},
									{
										"type": "typeParameter",
										"name": "Query",
										"constraint": {
											"type": "reference",
											"name": "AggregateQueryDefinition",
											"id": 105,
											"typeArguments": [
												{
													"type": "reference",
													"name": "AggregateQueryName",
													"id": 113
												},
												{
													"type": "typeParameter",
													"name": "State"
												},
												{
													"type": "reference",
													"name": "AggregateQueryInput",
													"id": 114
												},
												{
													"type": "reference",
													"name": "AggregateQueryOutput",
													"id": 115
												}
											]
										}
									}
								]
							}
						]
					}
				},
				{
					"id": 216,
					"name": "snapshotKey",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The snapshot key to use for snapshot\npersistence and retrieval"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 153,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 212,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The name of the aggregate type"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 130,
							"character": 15
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "TypeName",
						"constraint": {
							"type": "reference",
							"name": "AggregateTypeName",
							"id": 280
						}
					}
				},
				{
					"id": 214,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The current version of the aggregate.\nIt is calculated when the aggregate state is\nrebuilt and **does not change during the instance lifecycle**."
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 142,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						226,
						219,
						223,
						211,
						218,
						233,
						230,
						236,
						239,
						213,
						227,
						215,
						217,
						216,
						212,
						214
					]
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/types.ts",
					"line": 91,
					"character": 34
				}
			]
		},
		{
			"id": 105,
			"name": "AggregateQueryDefinition",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The definition of an aggregate query"
			},
			"typeParameter": [
				{
					"id": 106,
					"name": "Name",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryName",
						"id": 113
					}
				},
				{
					"id": 107,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 108,
					"name": "Input",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryInput",
						"id": 114
					}
				},
				{
					"id": 109,
					"name": "Output",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryOutput",
						"id": 115
					}
				}
			],
			"children": [
				{
					"id": 111,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "Aggregate/queries.types.ts",
							"line": 45,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 112,
					"name": "handler",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/queries.types.ts",
							"line": 46,
							"character": 18
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateQueryImplementation",
						"id": 116,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							},
							{
								"type": "typeParameter",
								"name": "Input",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryInput",
									"id": 114
								}
							},
							{
								"type": "typeParameter",
								"name": "Output",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryOutput",
									"id": 115
								}
							}
						]
					}
				},
				{
					"id": 110,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/queries.types.ts",
							"line": 44,
							"character": 15
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "Name",
						"constraint": {
							"type": "reference",
							"name": "AggregateQueryName",
							"id": 113
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						111,
						112,
						110
					]
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/queries.types.ts",
					"line": 38,
					"character": 41
				}
			]
		},
		{
			"id": 199,
			"name": "AggregateSnapshot",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An object representing the snapshot\nof an aggregate's internal state"
			},
			"children": [
				{
					"id": 200,
					"name": "serializedState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The serialized version of the aggregate's internal state"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 59,
							"character": 26
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 201,
					"name": "version",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The aggregate's version at the time thesnapshot was created"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 64,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						200,
						201
					]
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/types.ts",
					"line": 55,
					"character": 34
				}
			]
		},
		{
			"id": 263,
			"name": "AggregateTypeFactory",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An aggregate type factory",
				"returns": "An instance of the aggregate type\n"
			},
			"typeParameter": [
				{
					"id": 264,
					"name": "BC",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "BoundedContext",
						"id": 279
					}
				},
				{
					"id": 265,
					"name": "TypeName",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateTypeName",
						"id": 280
					}
				},
				{
					"id": 266,
					"name": "Identity",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateIdentity",
						"id": 281
					}
				},
				{
					"id": 267,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 268,
					"name": "Query",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryDefinition",
						"id": 105,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateQueryName",
								"id": 113
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "reference",
								"name": "AggregateQueryInput",
								"id": 114
							},
							{
								"type": "reference",
								"name": "AggregateQueryOutput",
								"id": 115
							}
						]
					}
				},
				{
					"id": 269,
					"name": "ErrorTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorTypeFactory",
						"id": 17,
						"typeArguments": [
							{
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							},
							{
								"type": "reference",
								"name": "CustomErrorData",
								"id": 5
							}
						]
					}
				},
				{
					"id": 270,
					"name": "EventType",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							},
							{
								"type": "typeParameter",
								"name": "State"
							}
						]
					}
				},
				{
					"id": 271,
					"name": "Command",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateCommandDefinition",
						"id": 149,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateCommandName",
								"id": 163
							},
							{
								"type": "reference",
								"name": "AggregateCommandInput",
								"id": 164
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "typeParameter",
								"name": "Query"
							},
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory"
							},
							{
								"type": "typeParameter",
								"name": "EventType"
							},
							{
								"type": "unknown",
								"name": "ErrorTypeFactory[\"name\"]"
							},
							{
								"type": "unknown",
								"name": "EventType[\"name\"]"
							}
						]
					}
				}
			],
			"signatures": [
				{
					"id": 272,
					"name": "__call",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "An aggregate type factory",
						"returns": "An instance of the aggregate type\n"
					},
					"parameters": [
						{
							"id": 273,
							"name": "identity",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "The identity of the aggregate"
							},
							"type": {
								"type": "reference",
								"name": "Identity",
								"id": 266
							}
						},
						{
							"id": 274,
							"name": "snapshot",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A snapshot of the aggregate"
							},
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "reference",
										"name": "AggregateSnapshot",
										"id": 199
									}
								]
							}
						},
						{
							"id": 275,
							"name": "events",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"comment": {
								"shortText": "A list of serialized domain events representing the history of the aggregate"
							},
							"type": {
								"type": "reference",
								"name": "ReadonlyArray",
								"typeArguments": [
									{
										"type": "reference",
										"name": "SerializedDomainEvent",
										"id": 293
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateInstance",
						"id": 202,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "BC",
								"constraint": {
									"type": "reference",
									"name": "BoundedContext",
									"id": 279
								}
							},
							{
								"type": "typeParameter",
								"name": "TypeName",
								"constraint": {
									"type": "reference",
									"name": "AggregateTypeName",
									"id": 280
								}
							},
							{
								"type": "typeParameter",
								"name": "Identity",
								"constraint": {
									"type": "reference",
									"name": "AggregateIdentity",
									"id": 281
								}
							},
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							},
							{
								"type": "typeParameter",
								"name": "Query",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryDefinition",
									"id": 105,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateQueryName",
											"id": 113
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "reference",
											"name": "AggregateQueryInput",
											"id": 114
										},
										{
											"type": "reference",
											"name": "AggregateQueryOutput",
											"id": 115
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "CustomErrorTypeFactory",
									"id": 17,
									"typeArguments": [
										{
											"type": "reference",
											"name": "CustomErrorName",
											"id": 4
										},
										{
											"type": "reference",
											"name": "CustomErrorData",
											"id": 5
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "EventType",
								"constraint": {
									"type": "reference",
									"name": "DomainEventTypeFactory",
									"id": 322,
									"typeArguments": [
										{
											"type": "reference",
											"name": "DomainEventName",
											"id": 331
										},
										{
											"type": "reference",
											"name": "DomaiEventPayload",
											"id": 332
										},
										{
											"type": "typeParameter",
											"name": "State"
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "Command",
								"constraint": {
									"type": "reference",
									"name": "AggregateCommandDefinition",
									"id": 149,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateCommandName",
											"id": 163
										},
										{
											"type": "reference",
											"name": "AggregateCommandInput",
											"id": 164
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "typeParameter",
											"name": "Query"
										},
										{
											"type": "typeParameter",
											"name": "ErrorTypeFactory"
										},
										{
											"type": "typeParameter",
											"name": "EventType"
										},
										{
											"type": "unknown",
											"name": "ErrorTypeFactory[\"name\"]"
										},
										{
											"type": "unknown",
											"name": "EventType[\"name\"]"
										}
									]
								}
							}
						]
					}
				}
			],
			"children": [
				{
					"id": 276,
					"name": "context",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The name of the Bounded Context the aggregate belongs to"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 466,
							"character": 18
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "BC",
						"constraint": {
							"type": "reference",
							"name": "BoundedContext",
							"id": 279
						}
					}
				},
				{
					"id": 278,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A description of the aggregate."
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 476,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 277,
					"name": "type",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The name of the aggregate's type"
					},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 471,
							"character": 15
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "TypeName",
						"constraint": {
							"type": "reference",
							"name": "AggregateTypeName",
							"id": 280
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						276,
						278,
						277
					]
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/types.ts",
					"line": 417,
					"character": 37
				}
			]
		},
		{
			"id": 139,
			"name": "CommandHandlerInterface",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An interface provided to the command handler\nimplementation which contains:\n - the aggregate `query` interface\n - an `error` interface to create business logic errors to throw\n - an `emit` interface to generate events which update the aggregate state"
			},
			"typeParameter": [
				{
					"id": 140,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 141,
					"name": "Query",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryDefinition",
						"id": 105,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateQueryName",
								"id": 113
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "reference",
								"name": "AggregateQueryInput",
								"id": 114
							},
							{
								"type": "reference",
								"name": "AggregateQueryOutput",
								"id": 115
							}
						]
					}
				},
				{
					"id": 142,
					"name": "ErrorTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorTypeFactory",
						"id": 17,
						"typeArguments": [
							{
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							},
							{
								"type": "reference",
								"name": "CustomErrorData",
								"id": 5
							}
						]
					}
				},
				{
					"id": 143,
					"name": "EventTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							},
							{
								"type": "typeParameter",
								"name": "State"
							}
						]
					}
				},
				{
					"id": 144,
					"name": "RaisableError",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "unknown",
						"name": "ErrorTypeFactory[\"name\"]"
					}
				},
				{
					"id": 145,
					"name": "EmittableEvent",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "unknown",
						"name": "EventTypeFactory[\"name\"]"
					}
				}
			],
			"children": [
				{
					"id": 148,
					"name": "emit",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/commands.types.ts",
							"line": 79,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateCommandEmissionInterface",
						"id": 99,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							},
							{
								"type": "typeParameter",
								"name": "EventTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "DomainEventTypeFactory",
									"id": 322,
									"typeArguments": [
										{
											"type": "reference",
											"name": "DomainEventName",
											"id": 331
										},
										{
											"type": "reference",
											"name": "DomaiEventPayload",
											"id": 332
										},
										{
											"type": "typeParameter",
											"name": "State"
										}
									]
								}
							},
							{
								"type": "reference",
								"name": "AggregateEventDictionary",
								"id": 91,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "State",
										"constraint": {
											"type": "reference",
											"name": "AggregateState",
											"id": 282
										}
									},
									{
										"type": "typeParameter",
										"name": "EventTypeFactory",
										"constraint": {
											"type": "reference",
											"name": "DomainEventTypeFactory",
											"id": 322,
											"typeArguments": [
												{
													"type": "reference",
													"name": "DomainEventName",
													"id": 331
												},
												{
													"type": "reference",
													"name": "DomaiEventPayload",
													"id": 332
												},
												{
													"type": "typeParameter",
													"name": "State"
												}
											]
										}
									}
								]
							},
							{
								"type": "typeParameter",
								"name": "EmittableEvent",
								"constraint": {
									"type": "unknown",
									"name": "EventTypeFactory[\"name\"]"
								}
							}
						]
					}
				},
				{
					"id": 147,
					"name": "error",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/commands.types.ts",
							"line": 73,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateCommandErrorInterface",
						"id": 78,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "CustomErrorTypeFactory",
									"id": 17,
									"typeArguments": [
										{
											"type": "reference",
											"name": "CustomErrorName",
											"id": 4
										},
										{
											"type": "reference",
											"name": "CustomErrorData",
											"id": 5
										}
									]
								}
							},
							{
								"type": "reference",
								"name": "AggregateErrorDictionary",
								"id": 72,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "ErrorTypeFactory",
										"constraint": {
											"type": "reference",
											"name": "CustomErrorTypeFactory",
											"id": 17,
											"typeArguments": [
												{
													"type": "reference",
													"name": "CustomErrorName",
													"id": 4
												},
												{
													"type": "reference",
													"name": "CustomErrorData",
													"id": 5
												}
											]
										}
									}
								]
							},
							{
								"type": "typeParameter",
								"name": "RaisableError",
								"constraint": {
									"type": "unknown",
									"name": "ErrorTypeFactory[\"name\"]"
								}
							}
						]
					}
				},
				{
					"id": 146,
					"name": "query",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/commands.types.ts",
							"line": 67,
							"character": 16
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateQueryInterface",
						"id": 134,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							},
							{
								"type": "typeParameter",
								"name": "Query",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryDefinition",
									"id": 105,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateQueryName",
											"id": 113
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "reference",
											"name": "AggregateQueryInput",
											"id": 114
										},
										{
											"type": "reference",
											"name": "AggregateQueryOutput",
											"id": 115
										}
									]
								}
							},
							{
								"type": "reference",
								"name": "AggregateQueryDictionary",
								"id": 131,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "State",
										"constraint": {
											"type": "reference",
											"name": "AggregateState",
											"id": 282
										}
									},
									{
										"type": "typeParameter",
										"name": "Query",
										"constraint": {
											"type": "reference",
											"name": "AggregateQueryDefinition",
											"id": 105,
											"typeArguments": [
												{
													"type": "reference",
													"name": "AggregateQueryName",
													"id": 113
												},
												{
													"type": "typeParameter",
													"name": "State"
												},
												{
													"type": "reference",
													"name": "AggregateQueryInput",
													"id": 114
												},
												{
													"type": "reference",
													"name": "AggregateQueryOutput",
													"id": 115
												}
											]
										}
									}
								]
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						148,
						147,
						146
					]
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/commands.types.ts",
					"line": 47,
					"character": 40
				}
			]
		},
		{
			"id": 342,
			"name": "CommandInterfaceConfiguration",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 343,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 344,
					"name": "Query",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryDefinition",
						"id": 105,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateQueryName",
								"id": 113
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "reference",
								"name": "AggregateQueryInput",
								"id": 114
							},
							{
								"type": "reference",
								"name": "AggregateQueryOutput",
								"id": 115
							}
						]
					}
				},
				{
					"id": 345,
					"name": "QueryDictionary",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryDictionary",
						"id": 131,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "typeParameter",
								"name": "Query"
							}
						]
					}
				},
				{
					"id": 346,
					"name": "ErrorTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorTypeFactory",
						"id": 17,
						"typeArguments": [
							{
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							},
							{
								"type": "reference",
								"name": "CustomErrorData",
								"id": 5
							}
						]
					}
				},
				{
					"id": 347,
					"name": "ErrorDictionary",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateErrorDictionary",
						"id": 72,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory"
							}
						]
					}
				},
				{
					"id": 348,
					"name": "EventType",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							},
							{
								"type": "typeParameter",
								"name": "State"
							}
						]
					}
				},
				{
					"id": 349,
					"name": "EventDictionary",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateEventDictionary",
						"id": 91,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "typeParameter",
								"name": "EventType"
							}
						]
					}
				},
				{
					"id": 350,
					"name": "Command",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateCommandDefinition",
						"id": 149,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateCommandName",
								"id": 163
							},
							{
								"type": "reference",
								"name": "AggregateCommandInput",
								"id": 164
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "typeParameter",
								"name": "Query"
							},
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory"
							},
							{
								"type": "typeParameter",
								"name": "EventType"
							},
							{
								"type": "unknown",
								"name": "ErrorTypeFactory[\"name\"]"
							},
							{
								"type": "unknown",
								"name": "EventType[\"name\"]"
							}
						]
					}
				}
			],
			"children": [
				{
					"id": 354,
					"name": "availableCommands",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/CommandInterface.ts",
							"line": 85,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "ReadonlyArray",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "Command",
								"constraint": {
									"type": "reference",
									"name": "AggregateCommandDefinition",
									"id": 149,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateCommandName",
											"id": 163
										},
										{
											"type": "reference",
											"name": "AggregateCommandInput",
											"id": 164
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "typeParameter",
											"name": "Query"
										},
										{
											"type": "typeParameter",
											"name": "ErrorTypeFactory"
										},
										{
											"type": "typeParameter",
											"name": "EventType"
										},
										{
											"type": "unknown",
											"name": "ErrorTypeFactory[\"name\"]"
										},
										{
											"type": "unknown",
											"name": "EventType[\"name\"]"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 353,
					"name": "emissionInterface",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/CommandInterface.ts",
							"line": 79,
							"character": 28
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateEmissionInterface",
						"id": 94,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							},
							{
								"type": "typeParameter",
								"name": "EventType",
								"constraint": {
									"type": "reference",
									"name": "DomainEventTypeFactory",
									"id": 322,
									"typeArguments": [
										{
											"type": "reference",
											"name": "DomainEventName",
											"id": 331
										},
										{
											"type": "reference",
											"name": "DomaiEventPayload",
											"id": 332
										},
										{
											"type": "typeParameter",
											"name": "State"
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "EventDictionary",
								"constraint": {
									"type": "reference",
									"name": "AggregateEventDictionary",
									"id": 91,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "typeParameter",
											"name": "EventType"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 352,
					"name": "errorInterface",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/CommandInterface.ts",
							"line": 74,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateErrorInterface",
						"id": 74,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "CustomErrorTypeFactory",
									"id": 17,
									"typeArguments": [
										{
											"type": "reference",
											"name": "CustomErrorName",
											"id": 4
										},
										{
											"type": "reference",
											"name": "CustomErrorData",
											"id": 5
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "ErrorDictionary",
								"constraint": {
									"type": "reference",
									"name": "AggregateErrorDictionary",
									"id": 72,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "ErrorTypeFactory"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 351,
					"name": "queryInterface",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/CommandInterface.ts",
							"line": 68,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateQueryInterface",
						"id": 134,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							},
							{
								"type": "typeParameter",
								"name": "Query",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryDefinition",
									"id": 105,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateQueryName",
											"id": 113
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "reference",
											"name": "AggregateQueryInput",
											"id": 114
										},
										{
											"type": "reference",
											"name": "AggregateQueryOutput",
											"id": 115
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "QueryDictionary",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryDictionary",
									"id": 131,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "typeParameter",
											"name": "Query"
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						354,
						353,
						352,
						351
					]
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/CommandInterface.ts",
					"line": 37,
					"character": 46
				}
			]
		},
		{
			"id": 420,
			"name": "ConstructorProps",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 421,
					"name": "events",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "Aggregate/validateConstructorProps.ts",
							"line": 7,
							"character": 17
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 422,
					"name": "identity",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "Aggregate/validateConstructorProps.ts",
							"line": 8,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 423,
					"name": "isSingleton",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "Aggregate/validateConstructorProps.ts",
							"line": 9,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 424,
					"name": "snapshot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "Aggregate/validateConstructorProps.ts",
							"line": 10,
							"character": 19
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						421,
						422,
						423,
						424
					]
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/validateConstructorProps.ts",
					"line": 6,
					"character": 26
				}
			]
		},
		{
			"id": 1,
			"name": "CustomErrorTypeDefinition",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An object describing a custom error type"
			},
			"typeParameter": [
				{
					"id": 2,
					"name": "Name",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorName",
						"id": 4
					}
				}
			],
			"children": [
				{
					"id": 3,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The name of the custom error type"
					},
					"sources": [
						{
							"fileName": "CustomError/types.ts",
							"line": 37,
							"character": 15
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "Name",
						"constraint": {
							"type": "reference",
							"name": "CustomErrorName",
							"id": 4
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						3
					]
				}
			],
			"sources": [
				{
					"fileName": "CustomError/types.ts",
					"line": 33,
					"character": 42
				}
			]
		},
		{
			"id": 296,
			"name": "DomainEventInstance",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An instance of a domain event"
			},
			"typeParameter": [
				{
					"id": 297,
					"name": "Name",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventName",
						"id": 331
					}
				},
				{
					"id": 298,
					"name": "Payload",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomaiEventPayload",
						"id": 332
					}
				},
				{
					"id": 299,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				}
			],
			"children": [
				{
					"id": 305,
					"name": "applyToState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A method to apply the event reducer function to\nan aggregate internal state in order to obtain\na new state",
						"tags": [
							{
								"tag": "param",
								"text": "An object representing the aggregate's internal state",
								"param": "state"
							},
							{
								"tag": "returns",
								"text": "An object representing the aggregate's new internal state\n"
							}
						]
					},
					"sources": [
						{
							"fileName": "DomainEvent/types.ts",
							"line": 61,
							"character": 23
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 306,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 307,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 308,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "State",
														"constraint": {
															"type": "reference",
															"name": "AggregateState",
															"id": 282
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "State",
												"constraint": {
													"type": "reference",
													"name": "AggregateState",
													"id": 282
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "DomainEvent/types.ts",
									"line": 61,
									"character": 24
								}
							]
						}
					}
				},
				{
					"id": 302,
					"name": "getSerializedPayload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A method to get the serialized version of the event payload"
					},
					"sources": [
						{
							"fileName": "DomainEvent/types.ts",
							"line": 51,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 303,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 304,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"sources": [
								{
									"fileName": "DomainEvent/types.ts",
									"line": 51,
									"character": 32
								}
							]
						}
					}
				},
				{
					"id": 300,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The name of the event"
					},
					"sources": [
						{
							"fileName": "DomainEvent/types.ts",
							"line": 41,
							"character": 15
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "Name",
						"constraint": {
							"type": "reference",
							"name": "DomainEventName",
							"id": 331
						}
					}
				},
				{
					"id": 301,
					"name": "payload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The payload of the event"
					},
					"sources": [
						{
							"fileName": "DomainEvent/types.ts",
							"line": 46,
							"character": 18
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "Payload",
						"constraint": {
							"type": "reference",
							"name": "DomaiEventPayload",
							"id": 332
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						305,
						302,
						300,
						301
					]
				}
			],
			"sources": [
				{
					"fileName": "DomainEvent/types.ts",
					"line": 33,
					"character": 36
				}
			]
		},
		{
			"id": 309,
			"name": "DomainEventTypeDefinition",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An object describing a domain event type"
			},
			"typeParameter": [
				{
					"id": 310,
					"name": "Name",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventName",
						"id": 331
					}
				},
				{
					"id": 311,
					"name": "Payload",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomaiEventPayload",
						"id": 332
					}
				},
				{
					"id": 312,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				}
			],
			"children": [
				{
					"id": 314,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "An optional description of the event"
					},
					"sources": [
						{
							"fileName": "DomainEvent/types.ts",
							"line": 80,
							"character": 22
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 316,
					"name": "deserializePayload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A pure function to deserialize the event payload.\nDefaults to JSON.parse"
					},
					"sources": [
						{
							"fileName": "DomainEvent/types.ts",
							"line": 92,
							"character": 29
						}
					],
					"type": {
						"type": "reference",
						"name": "Deserializer",
						"id": 44,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "Payload",
								"constraint": {
									"type": "reference",
									"name": "DomaiEventPayload",
									"id": 332
								}
							}
						]
					}
				},
				{
					"id": 313,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The name of the event"
					},
					"sources": [
						{
							"fileName": "DomainEvent/types.ts",
							"line": 75,
							"character": 15
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "Name",
						"constraint": {
							"type": "reference",
							"name": "DomainEventName",
							"id": 331
						}
					}
				},
				{
					"id": 317,
					"name": "reducer",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A pure function to obtain a new aggregate state given\nthe actual aggregate state and the event payload"
					},
					"sources": [
						{
							"fileName": "DomainEvent/types.ts",
							"line": 98,
							"character": 18
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 318,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 319,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 320,
											"name": "state",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "State",
														"constraint": {
															"type": "reference",
															"name": "AggregateState",
															"id": 282
														}
													}
												]
											}
										},
										{
											"id": 321,
											"name": "payload",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "Readonly",
												"typeArguments": [
													{
														"type": "typeParameter",
														"name": "Payload",
														"constraint": {
															"type": "reference",
															"name": "DomaiEventPayload",
															"id": 332
														}
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Readonly",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "State",
												"constraint": {
													"type": "reference",
													"name": "AggregateState",
													"id": 282
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "DomainEvent/types.ts",
									"line": 98,
									"character": 19
								}
							]
						}
					}
				},
				{
					"id": 315,
					"name": "serializePayload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"comment": {
						"shortText": "A pure function to get the serialized version\nof the event payload. Defaults to JSON.stringify"
					},
					"sources": [
						{
							"fileName": "DomainEvent/types.ts",
							"line": 86,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "Serializer",
						"id": 60,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "Payload",
								"constraint": {
									"type": "reference",
									"name": "DomaiEventPayload",
									"id": 332
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						314,
						316,
						313,
						317,
						315
					]
				}
			],
			"sources": [
				{
					"fileName": "DomainEvent/types.ts",
					"line": 67,
					"character": 42
				}
			]
		},
		{
			"id": 322,
			"name": "DomainEventTypeFactory",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A factory to get an instance of a domain event from its payload",
				"returns": "An instance of the domain event\n"
			},
			"typeParameter": [
				{
					"id": 323,
					"name": "Name",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventName",
						"id": 331
					}
				},
				{
					"id": 324,
					"name": "Payload",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomaiEventPayload",
						"id": 332
					}
				},
				{
					"id": 325,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				}
			],
			"signatures": [
				{
					"id": 326,
					"name": "__call",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "A factory to get an instance of a domain event from its payload",
						"returns": "An instance of the domain event\n"
					},
					"parameters": [
						{
							"id": 327,
							"name": "payload",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The domain event's payload"
							},
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Payload",
										"constraint": {
											"type": "reference",
											"name": "DomaiEventPayload",
											"id": 332
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "DomainEventInstance",
						"id": 296,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "Name",
								"constraint": {
									"type": "reference",
									"name": "DomainEventName",
									"id": 331
								}
							},
							{
								"type": "typeParameter",
								"name": "Payload",
								"constraint": {
									"type": "reference",
									"name": "DomaiEventPayload",
									"id": 332
								}
							},
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							}
						]
					}
				}
			],
			"children": [
				{
					"id": 329,
					"name": "description",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The description of the domain event"
					},
					"sources": [
						{
							"fileName": "DomainEvent/types.ts",
							"line": 147,
							"character": 22
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 330,
					"name": "fromSerializedPayload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "A method to get a domain event instance from its serialized\npayload"
					},
					"sources": [
						{
							"fileName": "DomainEvent/types.ts",
							"line": 153,
							"character": 32
						}
					],
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactoryFromSerializedPayload",
						"id": 333,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "Name",
								"constraint": {
									"type": "reference",
									"name": "DomainEventName",
									"id": 331
								}
							},
							{
								"type": "typeParameter",
								"name": "Payload",
								"constraint": {
									"type": "reference",
									"name": "DomaiEventPayload",
									"id": 332
								}
							},
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							}
						]
					}
				},
				{
					"id": 328,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The name of the domain event"
					},
					"sources": [
						{
							"fileName": "DomainEvent/types.ts",
							"line": 142,
							"character": 15
						}
					],
					"type": {
						"type": "typeParameter",
						"name": "Name",
						"constraint": {
							"type": "reference",
							"name": "DomainEventName",
							"id": 331
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						329,
						330,
						328
					]
				}
			],
			"sources": [
				{
					"fileName": "DomainEvent/types.ts",
					"line": 133,
					"character": 39
				}
			]
		},
		{
			"id": 367,
			"name": "EmissionInterfaceConfiguration",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 368,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 369,
					"name": "EventTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							},
							{
								"type": "typeParameter",
								"name": "State"
							}
						]
					}
				}
			],
			"children": [
				{
					"id": 370,
					"name": "emittableEvents",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/EmissionInterface.ts",
							"line": 21,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"name": "ReadonlyArray",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "EventTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "DomainEventTypeFactory",
									"id": 322,
									"typeArguments": [
										{
											"type": "reference",
											"name": "DomainEventName",
											"id": 331
										},
										{
											"type": "reference",
											"name": "DomaiEventPayload",
											"id": 332
										},
										{
											"type": "typeParameter",
											"name": "State"
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 371,
					"name": "onNewEvent",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/EmissionInterface.ts",
							"line": 22,
							"character": 21
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 372,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 373,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 374,
											"name": "event",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "DomainEventInstance",
												"id": 296,
												"typeArguments": [
													{
														"type": "reference",
														"name": "DomainEventName",
														"id": 331
													},
													{
														"type": "reference",
														"name": "DomaiEventPayload",
														"id": 332
													},
													{
														"type": "typeParameter",
														"name": "State",
														"constraint": {
															"type": "reference",
															"name": "AggregateState",
															"id": 282
														}
													}
												]
											}
										},
										{
											"id": 375,
											"name": "consistencyPolicy",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ConsistencyPolicy",
												"id": 283
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							],
							"sources": [
								{
									"fileName": "Aggregate/EmissionInterface.ts",
									"line": 22,
									"character": 22
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						370,
						371
					]
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/EmissionInterface.ts",
					"line": 13,
					"character": 47
				}
			]
		},
		{
			"id": 36,
			"name": "ErrorData",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 37,
					"name": "originalError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "utils/getDeserializer.ts",
							"line": 4,
							"character": 24
						},
						{
							"fileName": "utils/getSerializer.ts",
							"line": 4,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "Error"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						37
					]
				}
			],
			"sources": [
				{
					"fileName": "utils/getDeserializer.ts",
					"line": 3,
					"character": 19
				},
				{
					"fileName": "utils/getSerializer.ts",
					"line": 3,
					"character": 19
				}
			]
		},
		{
			"id": 382,
			"name": "ErrorInterfaceConfiguration",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 383,
					"name": "ErrorTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorTypeFactory",
						"id": 17,
						"typeArguments": [
							{
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							},
							{
								"type": "reference",
								"name": "CustomErrorData",
								"id": 5
							}
						]
					}
				}
			],
			"children": [
				{
					"id": 384,
					"name": "raisableErrors",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/ErrorInterface.ts",
							"line": 17,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "ReadonlyArray",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "CustomErrorTypeFactory",
									"id": 17,
									"typeArguments": [
										{
											"type": "reference",
											"name": "CustomErrorName",
											"id": 4
										},
										{
											"type": "reference",
											"name": "CustomErrorData",
											"id": 5
										}
									]
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						384
					]
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/ErrorInterface.ts",
					"line": 11,
					"character": 44
				}
			]
		},
		{
			"id": 501,
			"name": "EventStore",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 507,
					"name": "appendEventsToAggregates",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Repository/types.ts",
							"line": 35,
							"character": 35
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 508,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 509,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 510,
											"name": "insertions",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "ReadonlyArray",
												"typeArguments": [
													{
														"type": "reference",
														"name": "EventStoreInsertion",
														"id": 497
													}
												]
											}
										},
										{
											"id": 511,
											"name": "correlationId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ReadonlyArray",
												"typeArguments": [
													{
														"type": "reference",
														"name": "PersistedDomainEvent",
														"id": 540
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Repository/types.ts",
									"line": 35,
									"character": 36
								}
							]
						}
					}
				},
				{
					"id": 502,
					"name": "getEventsOfAggregate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Repository/types.ts",
							"line": 30,
							"character": 31
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 503,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 504,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 505,
											"name": "aggregate",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AggregateIdentifier",
												"id": 493
											}
										},
										{
											"id": 506,
											"name": "fromVersion",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reference",
												"name": "ReadonlyArray",
												"typeArguments": [
													{
														"type": "reference",
														"name": "SerializedDomainEvent",
														"id": 293
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Repository/types.ts",
									"line": 30,
									"character": 32
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						507,
						502
					]
				}
			],
			"sources": [
				{
					"fileName": "Repository/types.ts",
					"line": 29,
					"character": 27
				}
			]
		},
		{
			"id": 497,
			"name": "EventStoreInsertion",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 498,
					"name": "aggregate",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Repository/types.ts",
							"line": 24,
							"character": 20
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateIdentifier",
						"id": 493
					}
				},
				{
					"id": 500,
					"name": "eventsToAppend",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Repository/types.ts",
							"line": 26,
							"character": 25
						}
					],
					"type": {
						"type": "reference",
						"name": "ReadonlyArray",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SerializedDomainEvent",
								"id": 293
							}
						]
					}
				},
				{
					"id": 499,
					"name": "expectedAggregateVersion",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Repository/types.ts",
							"line": 25,
							"character": 35
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						498,
						500,
						499
					]
				}
			],
			"sources": [
				{
					"fileName": "Repository/types.ts",
					"line": 23,
					"character": 36
				}
			]
		},
		{
			"id": 390,
			"name": "QueryInterfaceConfiguration",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 391,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 392,
					"name": "Query",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryDefinition",
						"id": 105,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateQueryName",
								"id": 113
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "reference",
								"name": "AggregateQueryInput",
								"id": 114
							},
							{
								"type": "reference",
								"name": "AggregateQueryOutput",
								"id": 115
							}
						]
					}
				}
			],
			"children": [
				{
					"id": 396,
					"name": "availableQueries",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/QueryInterface.ts",
							"line": 21,
							"character": 27
						}
					],
					"type": {
						"type": "reference",
						"name": "ReadonlyArray",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "Query",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryDefinition",
									"id": 105,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateQueryName",
											"id": 113
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "reference",
											"name": "AggregateQueryInput",
											"id": 114
										},
										{
											"type": "reference",
											"name": "AggregateQueryOutput",
											"id": 115
										}
									]
								}
							}
						]
					}
				},
				{
					"id": 393,
					"name": "getState",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Aggregate/QueryInterface.ts",
							"line": 20,
							"character": 19
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 394,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 395,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "State",
										"constraint": {
											"type": "reference",
											"name": "AggregateState",
											"id": 282
										}
									}
								}
							],
							"sources": [
								{
									"fileName": "Aggregate/QueryInterface.ts",
									"line": 20,
									"character": 20
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						396,
						393
					]
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/QueryInterface.ts",
					"line": 11,
					"character": 44
				}
			]
		},
		{
			"id": 522,
			"name": "RepositoryDefinition",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 523,
					"name": "eventStore",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Repository/types.ts",
							"line": 53,
							"character": 21
						}
					],
					"type": {
						"type": "reference",
						"name": "EventStore",
						"id": 501
					}
				},
				{
					"id": 525,
					"name": "loadCanFailBecauseOfSnaphotService",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "Repository/types.ts",
							"line": 56,
							"character": 45
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "intrinsic",
								"name": "false"
							},
							{
								"type": "intrinsic",
								"name": "true"
							}
						]
					}
				},
				{
					"id": 524,
					"name": "snapshotService",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "Repository/types.ts",
							"line": 54,
							"character": 26
						}
					],
					"type": {
						"type": "reference",
						"name": "SnapshotService",
						"id": 512
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						523,
						525,
						524
					]
				}
			],
			"sources": [
				{
					"fileName": "Repository/types.ts",
					"line": 52,
					"character": 37
				}
			]
		},
		{
			"id": 526,
			"name": "RepositoryInstance",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 527,
					"name": "AggregatesCollection",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "ReadonlyArray",
						"typeArguments": [
							{
								"type": "reference",
								"name": "GenericAggregateInstance",
								"id": 284
							}
						]
					}
				}
			],
			"children": [
				{
					"id": 528,
					"name": "load",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Repository/types.ts",
							"line": 62,
							"character": 15
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 529,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 530,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 531,
											"name": "aggregates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "AggregatesCollection",
												"constraint": {
													"type": "reference",
													"name": "ReadonlyArray",
													"typeArguments": [
														{
															"type": "reference",
															"name": "GenericAggregateInstance",
															"id": 284
														}
													]
												}
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "AggregatesCollection",
												"constraint": {
													"type": "reference",
													"name": "ReadonlyArray",
													"typeArguments": [
														{
															"type": "reference",
															"name": "GenericAggregateInstance",
															"id": 284
														}
													]
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Repository/types.ts",
									"line": 62,
									"character": 16
								}
							]
						}
					}
				},
				{
					"id": 532,
					"name": "persist",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Repository/types.ts",
							"line": 66,
							"character": 18
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 533,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 534,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 535,
											"name": "aggregates",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "typeParameter",
												"name": "AggregatesCollection",
												"constraint": {
													"type": "reference",
													"name": "ReadonlyArray",
													"typeArguments": [
														{
															"type": "reference",
															"name": "GenericAggregateInstance",
															"id": 284
														}
													]
												}
											}
										},
										{
											"id": 536,
											"name": "correlationId",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isOptional": true
											},
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "reflection",
												"declaration": {
													"id": 537,
													"name": "__type",
													"kind": 65536,
													"kindString": "Type literal",
													"flags": {},
													"children": [
														{
															"id": 538,
															"name": "aggregates",
															"kind": 32,
															"kindString": "Variable",
															"flags": {
																"isOptional": true
															},
															"sources": [
																{
																	"fileName": "Repository/types.ts",
																	"line": 70,
																	"character": 23
																}
															],
															"type": {
																"type": "reference",
																"name": "AggregatesCollection",
																"id": 527
															}
														},
														{
															"id": 539,
															"name": "persistedEvents",
															"kind": 32,
															"kindString": "Variable",
															"flags": {},
															"sources": [
																{
																	"fileName": "Repository/types.ts",
																	"line": 71,
																	"character": 28
																}
															],
															"type": {
																"type": "reference",
																"name": "ReadonlyArray",
																"typeArguments": [
																	{
																		"type": "reference",
																		"name": "PersistedDomainEvent",
																		"id": 540
																	}
																]
															}
														}
													],
													"groups": [
														{
															"title": "Variables",
															"kind": 32,
															"children": [
																538,
																539
															]
														}
													],
													"sources": [
														{
															"fileName": "Repository/types.ts",
															"line": 69,
															"character": 15
														}
													]
												}
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Repository/types.ts",
									"line": 66,
									"character": 19
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						528,
						532
					]
				}
			],
			"sources": [
				{
					"fileName": "Repository/types.ts",
					"line": 59,
					"character": 35
				}
			]
		},
		{
			"id": 293,
			"name": "SerializedDomainEvent",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An object representing a domain event"
			},
			"children": [
				{
					"id": 294,
					"name": "name",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The name of the event"
					},
					"sources": [
						{
							"fileName": "DomainEvent/types.ts",
							"line": 22,
							"character": 15
						}
					],
					"type": {
						"type": "reference",
						"name": "DomainEventName",
						"id": 331
					}
				},
				{
					"id": 295,
					"name": "payload",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "The serialized payload of the event"
					},
					"sources": [
						{
							"fileName": "DomainEvent/types.ts",
							"line": 27,
							"character": 18
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						294,
						295
					]
				}
			],
			"sources": [
				{
					"fileName": "DomainEvent/types.ts",
					"line": 18,
					"character": 38
				}
			]
		},
		{
			"id": 512,
			"name": "SnapshotService",
			"kind": 256,
			"kindString": "Interface",
			"flags": {
				"isExported": true
			},
			"children": [
				{
					"id": 513,
					"name": "loadAggregateSnapshot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Repository/types.ts",
							"line": 42,
							"character": 32
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 514,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 515,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 516,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "union",
												"types": [
													{
														"type": "reference",
														"name": "AggregateSnapshot",
														"id": 199
													},
													{
														"type": "intrinsic",
														"name": "undefined"
													}
												]
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Repository/types.ts",
									"line": 42,
									"character": 33
								}
							]
						}
					}
				},
				{
					"id": 517,
					"name": "saveAggregateSnapshot",
					"kind": 1024,
					"kindString": "Property",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "Repository/types.ts",
							"line": 46,
							"character": 32
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 518,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"signatures": [
								{
									"id": 519,
									"name": "__call",
									"kind": 4096,
									"kindString": "Call signature",
									"flags": {},
									"parameters": [
										{
											"id": 520,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 521,
											"name": "snapshot",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "reference",
												"name": "AggregateSnapshot",
												"id": 199
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "Promise",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										]
									}
								}
							],
							"sources": [
								{
									"fileName": "Repository/types.ts",
									"line": 46,
									"character": 33
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						513,
						517
					]
				}
			],
			"sources": [
				{
					"fileName": "Repository/types.ts",
					"line": 41,
					"character": 32
				}
			]
		},
		{
			"id": 565,
			"name": "Storage",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"indexSignature": {
				"id": 566,
				"name": "__index",
				"kind": 8192,
				"kindString": "Index signature",
				"flags": {},
				"parameters": [
					{
						"id": 567,
						"name": "key",
						"kind": 32768,
						"kindString": "Parameter",
						"flags": {},
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				],
				"type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "AggregateSnapshot",
							"id": 199
						},
						{
							"type": "intrinsic",
							"name": "undefined"
						}
					]
				}
			},
			"sources": [
				{
					"fileName": "Repository/InMemorySnapshotService.ts",
					"line": 5,
					"character": 17
				}
			]
		},
		{
			"id": 454,
			"name": "WithOriginalError",
			"kind": 256,
			"kindString": "Interface",
			"flags": {},
			"children": [
				{
					"id": 455,
					"name": "originalError",
					"kind": 1024,
					"kindString": "Property",
					"flags": {},
					"sources": [
						{
							"fileName": "Aggregate/index.ts",
							"line": 56,
							"character": 24
						},
						{
							"fileName": "Repository/index.ts",
							"line": 16,
							"character": 24
						}
					],
					"type": {
						"type": "reference",
						"name": "Error"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"kind": 1024,
					"children": [
						455
					]
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/index.ts",
					"line": 55,
					"character": 27
				},
				{
					"fileName": "Repository/index.ts",
					"line": 15,
					"character": 27
				}
			]
		},
		{
			"id": 185,
			"name": "AggregateCommandDictionary",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 186,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 187,
					"name": "Query",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryDefinition",
						"id": 105,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateQueryName",
								"id": 113
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "reference",
								"name": "AggregateQueryInput",
								"id": 114
							},
							{
								"type": "reference",
								"name": "AggregateQueryOutput",
								"id": 115
							}
						]
					}
				},
				{
					"id": 188,
					"name": "ErrorTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorTypeFactory",
						"id": 17,
						"typeArguments": [
							{
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							},
							{
								"type": "reference",
								"name": "CustomErrorData",
								"id": 5
							}
						]
					}
				},
				{
					"id": 189,
					"name": "EventTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							},
							{
								"type": "typeParameter",
								"name": "State"
							}
						]
					}
				},
				{
					"id": 190,
					"name": "Command",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateCommandDefinition",
						"id": 149,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateCommandName",
								"id": 163
							},
							{
								"type": "reference",
								"name": "AggregateCommandInput",
								"id": 164
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "typeParameter",
								"name": "Query"
							},
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory"
							},
							{
								"type": "typeParameter",
								"name": "EventTypeFactory"
							},
							{
								"type": "unknown",
								"name": "ErrorTypeFactory[\"name\"]"
							},
							{
								"type": "unknown",
								"name": "EventTypeFactory[\"name\"]"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/commands.types.ts",
					"line": 206,
					"character": 38
				}
			],
			"type": {
				"type": "reference",
				"name": "MapDiscriminatedUnion",
				"id": 289,
				"typeArguments": [
					{
						"type": "typeParameter",
						"name": "Command",
						"constraint": {
							"type": "reference",
							"name": "AggregateCommandDefinition",
							"id": 149,
							"typeArguments": [
								{
									"type": "reference",
									"name": "AggregateCommandName",
									"id": 163
								},
								{
									"type": "reference",
									"name": "AggregateCommandInput",
									"id": 164
								},
								{
									"type": "typeParameter",
									"name": "State"
								},
								{
									"type": "typeParameter",
									"name": "Query"
								},
								{
									"type": "typeParameter",
									"name": "ErrorTypeFactory"
								},
								{
									"type": "typeParameter",
									"name": "EventTypeFactory"
								},
								{
									"type": "unknown",
									"name": "ErrorTypeFactory[\"name\"]"
								},
								{
									"type": "unknown",
									"name": "EventTypeFactory[\"name\"]"
								}
							]
						}
					},
					{
						"type": "stringLiteral",
						"value": "name"
					}
				]
			}
		},
		{
			"id": 99,
			"name": "AggregateCommandEmissionInterface",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 100,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 101,
					"name": "EventTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							},
							{
								"type": "typeParameter",
								"name": "State"
							}
						]
					}
				},
				{
					"id": 102,
					"name": "EventDictionary",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateEventDictionary",
						"id": 91,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "typeParameter",
								"name": "EventTypeFactory"
							}
						]
					}
				},
				{
					"id": 103,
					"name": "EmittableEvent",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "typeParameter",
							"name": "EventDictionary"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/events.types.ts",
					"line": 45,
					"character": 45
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 104,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "Aggregate/events.types.ts",
							"line": 54,
							"character": 3
						}
					]
				}
			}
		},
		{
			"id": 78,
			"name": "AggregateCommandErrorInterface",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 79,
					"name": "ErrorTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorTypeFactory",
						"id": 17,
						"typeArguments": [
							{
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							},
							{
								"type": "reference",
								"name": "CustomErrorData",
								"id": 5
							}
						]
					}
				},
				{
					"id": 80,
					"name": "ErrorDictionary",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateErrorDictionary",
						"id": 72,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory"
							}
						]
					}
				},
				{
					"id": 81,
					"name": "RaisableErrorName",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "typeParameter",
							"name": "ErrorDictionary"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/errors.types.ts",
					"line": 35,
					"character": 42
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 82,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "Aggregate/errors.types.ts",
							"line": 42,
							"character": 3
						}
					]
				}
			}
		},
		{
			"id": 165,
			"name": "AggregateCommandImplementation",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The implementation of an aggregate command"
			},
			"typeParameter": [
				{
					"id": 166,
					"name": "Input",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateCommandInput",
						"id": 164
					}
				},
				{
					"id": 167,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 168,
					"name": "Query",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryDefinition",
						"id": 105,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateQueryName",
								"id": 113
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "reference",
								"name": "AggregateQueryInput",
								"id": 114
							},
							{
								"type": "reference",
								"name": "AggregateQueryOutput",
								"id": 115
							}
						]
					}
				},
				{
					"id": 169,
					"name": "ErrorTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorTypeFactory",
						"id": 17,
						"typeArguments": [
							{
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							},
							{
								"type": "reference",
								"name": "CustomErrorData",
								"id": 5
							}
						]
					}
				},
				{
					"id": 170,
					"name": "EventTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							},
							{
								"type": "typeParameter",
								"name": "State"
							}
						]
					}
				},
				{
					"id": 171,
					"name": "RaisableError",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "unknown",
						"name": "ErrorTypeFactory[\"name\"]"
					}
				},
				{
					"id": 172,
					"name": "EmittableEvent",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "unknown",
						"name": "EventTypeFactory[\"name\"]"
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/commands.types.ts",
					"line": 90,
					"character": 42
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 173,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 174,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 175,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "Input",
										"constraint": {
											"type": "reference",
											"name": "AggregateCommandInput",
											"id": 164
										}
									}
								},
								{
									"id": 176,
									"name": "commandInterface",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "CommandHandlerInterface",
										"id": 139,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "State",
												"constraint": {
													"type": "reference",
													"name": "AggregateState",
													"id": 282
												}
											},
											{
												"type": "typeParameter",
												"name": "Query",
												"constraint": {
													"type": "reference",
													"name": "AggregateQueryDefinition",
													"id": 105,
													"typeArguments": [
														{
															"type": "reference",
															"name": "AggregateQueryName",
															"id": 113
														},
														{
															"type": "typeParameter",
															"name": "State"
														},
														{
															"type": "reference",
															"name": "AggregateQueryInput",
															"id": 114
														},
														{
															"type": "reference",
															"name": "AggregateQueryOutput",
															"id": 115
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "ErrorTypeFactory",
												"constraint": {
													"type": "reference",
													"name": "CustomErrorTypeFactory",
													"id": 17,
													"typeArguments": [
														{
															"type": "reference",
															"name": "CustomErrorName",
															"id": 4
														},
														{
															"type": "reference",
															"name": "CustomErrorData",
															"id": 5
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "EventTypeFactory",
												"constraint": {
													"type": "reference",
													"name": "DomainEventTypeFactory",
													"id": 322,
													"typeArguments": [
														{
															"type": "reference",
															"name": "DomainEventName",
															"id": 331
														},
														{
															"type": "reference",
															"name": "DomaiEventPayload",
															"id": 332
														},
														{
															"type": "typeParameter",
															"name": "State"
														}
													]
												}
											},
											{
												"type": "typeParameter",
												"name": "RaisableError",
												"constraint": {
													"type": "unknown",
													"name": "ErrorTypeFactory[\"name\"]"
												}
											},
											{
												"type": "typeParameter",
												"name": "EmittableEvent",
												"constraint": {
													"type": "unknown",
													"name": "EventTypeFactory[\"name\"]"
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "Aggregate/commands.types.ts",
							"line": 110,
							"character": 3
						}
					]
				}
			}
		},
		{
			"id": 164,
			"name": "AggregateCommandInput",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The input type of an aggregate command"
			},
			"sources": [
				{
					"fileName": "Aggregate/commands.types.ts",
					"line": 38,
					"character": 33
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "any"
			}
		},
		{
			"id": 191,
			"name": "AggregateCommandInterface",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A dictionary of all the behaviours exposed by an aggregate"
			},
			"typeParameter": [
				{
					"id": 192,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 193,
					"name": "Query",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryDefinition",
						"id": 105,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateQueryName",
								"id": 113
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "reference",
								"name": "AggregateQueryInput",
								"id": 114
							},
							{
								"type": "reference",
								"name": "AggregateQueryOutput",
								"id": 115
							}
						]
					}
				},
				{
					"id": 194,
					"name": "ErrorTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorTypeFactory",
						"id": 17,
						"typeArguments": [
							{
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							},
							{
								"type": "reference",
								"name": "CustomErrorData",
								"id": 5
							}
						]
					}
				},
				{
					"id": 195,
					"name": "EventTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							},
							{
								"type": "typeParameter",
								"name": "State"
							}
						]
					}
				},
				{
					"id": 196,
					"name": "Command",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateCommandDefinition",
						"id": 149,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateCommandName",
								"id": 163
							},
							{
								"type": "reference",
								"name": "AggregateCommandInput",
								"id": 164
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "typeParameter",
								"name": "Query"
							},
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory"
							},
							{
								"type": "typeParameter",
								"name": "EventTypeFactory"
							},
							{
								"type": "unknown",
								"name": "ErrorTypeFactory[\"name\"]"
							},
							{
								"type": "unknown",
								"name": "EventTypeFactory[\"name\"]"
							}
						]
					}
				},
				{
					"id": 197,
					"name": "CommandDictionary",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateCommandDictionary",
						"id": 185,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "typeParameter",
								"name": "Query"
							},
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory"
							},
							{
								"type": "typeParameter",
								"name": "EventTypeFactory"
							},
							{
								"type": "typeParameter",
								"name": "Command"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/commands.types.ts",
					"line": 238,
					"character": 37
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 198,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "Aggregate/commands.types.ts",
							"line": 272,
							"character": 3
						}
					]
				}
			}
		},
		{
			"id": 179,
			"name": "AggregateCommandInterfaceMethod",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An aggregate behaviour exposed by the\naggregate `execute` interface"
			},
			"typeParameter": [
				{
					"id": 180,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 181,
					"name": "Query",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryDefinition",
						"id": 105,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateQueryName",
								"id": 113
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "reference",
								"name": "AggregateQueryInput",
								"id": 114
							},
							{
								"type": "reference",
								"name": "AggregateQueryOutput",
								"id": 115
							}
						]
					}
				},
				{
					"id": 182,
					"name": "ErrorTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorTypeFactory",
						"id": 17,
						"typeArguments": [
							{
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							},
							{
								"type": "reference",
								"name": "CustomErrorData",
								"id": 5
							}
						]
					}
				},
				{
					"id": 183,
					"name": "EventTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							},
							{
								"type": "typeParameter",
								"name": "State"
							}
						]
					}
				},
				{
					"id": 184,
					"name": "CommandImplementation",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateCommandImplementation",
						"id": 165,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "typeParameter",
								"name": "Query"
							},
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory"
							},
							{
								"type": "typeParameter",
								"name": "EventTypeFactory"
							},
							{
								"type": "unknown",
								"name": "ErrorTypeFactory[\"name\"]"
							},
							{
								"type": "unknown",
								"name": "EventTypeFactory[\"name\"]"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/commands.types.ts",
					"line": 176,
					"character": 43
				}
			],
			"type": {
				"type": "unknown",
				"name": "AggregateCommandInterfaceMethod<State, Query, ErrorTypeFactory, EventTypeFactory, CommandImplementation>"
			}
		},
		{
			"id": 163,
			"name": "AggregateCommandName",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The name of an aggregate command"
			},
			"sources": [
				{
					"fileName": "Aggregate/commands.types.ts",
					"line": 33,
					"character": 32
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 94,
			"name": "AggregateEmissionInterface",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 95,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 96,
					"name": "EventTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							},
							{
								"type": "typeParameter",
								"name": "State"
							}
						]
					}
				},
				{
					"id": 97,
					"name": "EventDictionary",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateEventDictionary",
						"id": 91,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "typeParameter",
								"name": "EventTypeFactory"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/events.types.ts",
					"line": 30,
					"character": 38
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 98,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "Aggregate/events.types.ts",
							"line": 38,
							"character": 3
						}
					]
				}
			}
		},
		{
			"id": 85,
			"name": "AggregateEmissionInterfaceMethod",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 86,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 87,
					"name": "EventTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							},
							{
								"type": "typeParameter",
								"name": "State"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/events.types.ts",
					"line": 12,
					"character": 44
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 88,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 89,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 90,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "reference",
										"name": "DomainEventPayloadType",
										"id": 83,
										"typeArguments": [
											{
												"type": "typeParameter",
												"name": "EventTypeFactory",
												"constraint": {
													"type": "reference",
													"name": "DomainEventTypeFactory",
													"id": 322,
													"typeArguments": [
														{
															"type": "reference",
															"name": "DomainEventName",
															"id": 331
														},
														{
															"type": "reference",
															"name": "DomaiEventPayload",
															"id": 332
														},
														{
															"type": "typeParameter",
															"name": "State"
														}
													]
												}
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "Aggregate/events.types.ts",
							"line": 19,
							"character": 3
						}
					]
				}
			}
		},
		{
			"id": 72,
			"name": "AggregateErrorDictionary",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 73,
					"name": "ErrorTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorTypeFactory",
						"id": 17,
						"typeArguments": [
							{
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							},
							{
								"type": "reference",
								"name": "CustomErrorData",
								"id": 5
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/errors.types.ts",
					"line": 15,
					"character": 36
				}
			],
			"type": {
				"type": "reference",
				"name": "MapDiscriminatedUnion",
				"id": 289,
				"typeArguments": [
					{
						"type": "typeParameter",
						"name": "ErrorTypeFactory",
						"constraint": {
							"type": "reference",
							"name": "CustomErrorTypeFactory",
							"id": 17,
							"typeArguments": [
								{
									"type": "reference",
									"name": "CustomErrorName",
									"id": 4
								},
								{
									"type": "reference",
									"name": "CustomErrorData",
									"id": 5
								}
							]
						}
					},
					{
						"type": "stringLiteral",
						"value": "name"
					}
				]
			}
		},
		{
			"id": 74,
			"name": "AggregateErrorInterface",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 75,
					"name": "ErrorTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorTypeFactory",
						"id": 17,
						"typeArguments": [
							{
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							},
							{
								"type": "reference",
								"name": "CustomErrorData",
								"id": 5
							}
						]
					}
				},
				{
					"id": 76,
					"name": "ErrorDictionary",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateErrorDictionary",
						"id": 72,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/errors.types.ts",
					"line": 22,
					"character": 35
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 77,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "Aggregate/errors.types.ts",
							"line": 28,
							"character": 3
						}
					]
				}
			}
		},
		{
			"id": 91,
			"name": "AggregateEventDictionary",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 92,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 93,
					"name": "EventTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							},
							{
								"type": "typeParameter",
								"name": "State"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/events.types.ts",
					"line": 21,
					"character": 36
				}
			],
			"type": {
				"type": "reference",
				"name": "MapDiscriminatedUnion",
				"id": 289,
				"typeArguments": [
					{
						"type": "typeParameter",
						"name": "EventTypeFactory",
						"constraint": {
							"type": "reference",
							"name": "DomainEventTypeFactory",
							"id": 322,
							"typeArguments": [
								{
									"type": "reference",
									"name": "DomainEventName",
									"id": 331
								},
								{
									"type": "reference",
									"name": "DomaiEventPayload",
									"id": 332
								},
								{
									"type": "typeParameter",
									"name": "State"
								}
							]
						}
					},
					{
						"type": "stringLiteral",
						"value": "name"
					}
				]
			}
		},
		{
			"id": 281,
			"name": "AggregateIdentity",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The identity of an aggregate"
			},
			"sources": [
				{
					"fileName": "Aggregate/types.ts",
					"line": 44,
					"character": 29
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					}
				]
			}
		},
		{
			"id": 131,
			"name": "AggregateQueryDictionary",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 132,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 133,
					"name": "Query",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryDefinition",
						"id": 105,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateQueryName",
								"id": 113
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "reference",
								"name": "AggregateQueryInput",
								"id": 114
							},
							{
								"type": "reference",
								"name": "AggregateQueryOutput",
								"id": 115
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/queries.types.ts",
					"line": 67,
					"character": 36
				}
			],
			"type": {
				"type": "reference",
				"name": "MapDiscriminatedUnion",
				"id": 289,
				"typeArguments": [
					{
						"type": "typeParameter",
						"name": "Query",
						"constraint": {
							"type": "reference",
							"name": "AggregateQueryDefinition",
							"id": 105,
							"typeArguments": [
								{
									"type": "reference",
									"name": "AggregateQueryName",
									"id": 113
								},
								{
									"type": "typeParameter",
									"name": "State"
								},
								{
									"type": "reference",
									"name": "AggregateQueryInput",
									"id": 114
								},
								{
									"type": "reference",
									"name": "AggregateQueryOutput",
									"id": 115
								}
							]
						}
					},
					{
						"type": "stringLiteral",
						"value": "name"
					}
				]
			}
		},
		{
			"id": 116,
			"name": "AggregateQueryImplementation",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The implementation of an aggregate query"
			},
			"typeParameter": [
				{
					"id": 117,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 118,
					"name": "Input",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryInput",
						"id": 114
					}
				},
				{
					"id": 119,
					"name": "Output",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryOutput",
						"id": 115
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/queries.types.ts",
					"line": 21,
					"character": 40
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 120,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 121,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 122,
									"name": "state",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "State",
										"constraint": {
											"type": "reference",
											"name": "AggregateState",
											"id": 282
										}
									}
								},
								{
									"id": 123,
									"name": "input",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "Input",
										"constraint": {
											"type": "reference",
											"name": "AggregateQueryInput",
											"id": 114
										}
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "Output",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryOutput",
									"id": 115
								}
							}
						}
					],
					"sources": [
						{
							"fileName": "Aggregate/queries.types.ts",
							"line": 25,
							"character": 3
						}
					]
				}
			}
		},
		{
			"id": 114,
			"name": "AggregateQueryInput",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The input type of an aggregate query"
			},
			"sources": [
				{
					"fileName": "Aggregate/queries.types.ts",
					"line": 11,
					"character": 31
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "any"
			}
		},
		{
			"id": 134,
			"name": "AggregateQueryInterface",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A generic aggregate query interface"
			},
			"typeParameter": [
				{
					"id": 135,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 136,
					"name": "Query",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryDefinition",
						"id": 105,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateQueryName",
								"id": 113
							},
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "reference",
								"name": "AggregateQueryInput",
								"id": 114
							},
							{
								"type": "reference",
								"name": "AggregateQueryOutput",
								"id": 115
							}
						]
					}
				},
				{
					"id": 137,
					"name": "QueryDictionary",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryDictionary",
						"id": 131,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "typeParameter",
								"name": "Query"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/queries.types.ts",
					"line": 80,
					"character": 35
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 138,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "Aggregate/queries.types.ts",
							"line": 89,
							"character": 3
						}
					]
				}
			}
		},
		{
			"id": 128,
			"name": "AggregateQueryInterfaceMethod",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A generic method of the aggregate query interface"
			},
			"typeParameter": [
				{
					"id": 129,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				},
				{
					"id": 130,
					"name": "QueryImplementation",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateQueryImplementation",
						"id": 116,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State"
							},
							{
								"type": "reference",
								"name": "AggregateQueryInput",
								"id": 114
							},
							{
								"type": "reference",
								"name": "AggregateQueryOutput",
								"id": 115
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/queries.types.ts",
					"line": 52,
					"character": 41
				}
			],
			"type": {
				"type": "unknown",
				"name": "AggregateQueryInterfaceMethod<State, QueryImplementation>"
			}
		},
		{
			"id": 113,
			"name": "AggregateQueryName",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The name of an aggregate query"
			},
			"sources": [
				{
					"fileName": "Aggregate/queries.types.ts",
					"line": 6,
					"character": 30
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 115,
			"name": "AggregateQueryOutput",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The output type of an aggregate query"
			},
			"sources": [
				{
					"fileName": "Aggregate/queries.types.ts",
					"line": 16,
					"character": 32
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "any"
			}
		},
		{
			"id": 282,
			"name": "AggregateState",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The internal state of an aggregate"
			},
			"sources": [
				{
					"fileName": "Aggregate/types.ts",
					"line": 49,
					"character": 26
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "any"
			}
		},
		{
			"id": 280,
			"name": "AggregateTypeName",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The name of an aggregate type"
			},
			"sources": [
				{
					"fileName": "Aggregate/types.ts",
					"line": 39,
					"character": 29
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 279,
			"name": "BoundedContext",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The name of the Bounded Context where the domain model lives"
			},
			"sources": [
				{
					"fileName": "Aggregate/types.ts",
					"line": 34,
					"character": 26
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 177,
			"name": "CommandImplementationInput",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The input type of an aggregate command implementation"
			},
			"typeParameter": [
				{
					"id": 178,
					"name": "CommandImplementation",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/commands.types.ts",
					"line": 166,
					"character": 38
				}
			],
			"type": {
				"type": "unknown",
				"name": "CommandImplementationInput<CommandImplementation>"
			}
		},
		{
			"id": 283,
			"name": "ConsistencyPolicy",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "When an aggregate's command implementation\nemits an event, it can specify the consistency policy to observe\nif the aggregate gets passed to the repository in order to persist\nthe new events.",
				"text": "The meaning of the possible values are:\n\n `0`: Strict consistency policy.\n     We expect that the version of the persisted aggeggregate\n     matches the version of the aggregate passed to the repository\n\n `1`: Soft consisteny policy.\n     We expect that the aggregate just exists into the\n     persistence layer.\n\n `2`: No consistency policy.\n     We have no expectations regarding consistency\n"
			},
			"sources": [
				{
					"fileName": "Aggregate/types.ts",
					"line": 86,
					"character": 29
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "unknown",
						"name": "0"
					},
					{
						"type": "unknown",
						"name": "1"
					},
					{
						"type": "unknown",
						"name": "2"
					}
				]
			}
		},
		{
			"id": 5,
			"name": "CustomErrorData",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The `data` payload that could be exposed\nby a custom error instance"
			},
			"sources": [
				{
					"fileName": "CustomError/types.ts",
					"line": 10,
					"character": 27
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "any"
			}
		},
		{
			"id": 14,
			"name": "CustomErrorInstance",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "An instance of a custom error type"
			},
			"typeParameter": [
				{
					"id": 15,
					"name": "Name",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorName",
						"id": 4
					}
				},
				{
					"id": 16,
					"name": "Data",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorData",
						"id": 5
					}
				}
			],
			"sources": [
				{
					"fileName": "CustomError/types.ts",
					"line": 25,
					"character": 31
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"name": "NamedError",
						"id": 6,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "Name",
								"constraint": {
									"type": "reference",
									"name": "CustomErrorName",
									"id": 4
								}
							}
						]
					},
					{
						"type": "reference",
						"name": "ErrorWithData",
						"id": 10,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "Data",
								"constraint": {
									"type": "reference",
									"name": "CustomErrorData",
									"id": 5
								}
							}
						]
					}
				]
			}
		},
		{
			"id": 4,
			"name": "CustomErrorName",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The name of a custom error type"
			},
			"sources": [
				{
					"fileName": "CustomError/types.ts",
					"line": 4,
					"character": 27
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 17,
			"name": "CustomErrorTypeFactory",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A factory to generate an instance of a custom error type",
				"tags": [
					{
						"tag": "param",
						"text": "The error message",
						"param": "message"
					},
					{
						"tag": "param",
						"text": "A paylod to expose through `error.data`\n",
						"param": "data"
					}
				]
			},
			"typeParameter": [
				{
					"id": 18,
					"name": "Name",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorName",
						"id": 4
					}
				},
				{
					"id": 19,
					"name": "Data",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorData",
						"id": 5
					}
				}
			],
			"sources": [
				{
					"fileName": "CustomError/types.ts",
					"line": 45,
					"character": 34
				}
			],
			"type": {
				"type": "unknown",
				"name": "CustomErrorTypeFactory<Name, Data>"
			}
		},
		{
			"id": 44,
			"name": "Deserializer",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 45,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"sources": [
				{
					"fileName": "utils/getDeserializer.ts",
					"line": 14,
					"character": 24
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 46,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 47,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 48,
									"name": "str",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "T"
							}
						}
					],
					"sources": [
						{
							"fileName": "utils/getDeserializer.ts",
							"line": 14,
							"character": 29
						}
					]
				}
			}
		},
		{
			"id": 285,
			"name": "DiscriminatedUnion",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 286,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				},
				{
					"id": 287,
					"name": "K",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "typeParameter",
							"name": "T"
						}
					}
				},
				{
					"id": 288,
					"name": "V",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "unknown",
						"name": "T[K]"
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/types.ts",
					"line": 479,
					"character": 30
				}
			],
			"type": {
				"type": "unknown",
				"name": "DiscriminatedUnion<T, K, V>"
			}
		},
		{
			"id": 332,
			"name": "DomaiEventPayload",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A domain event payload"
			},
			"sources": [
				{
					"fileName": "DomainEvent/types.ts",
					"line": 13,
					"character": 29
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "any"
			}
		},
		{
			"id": 331,
			"name": "DomainEventName",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The name of a domain event"
			},
			"sources": [
				{
					"fileName": "DomainEvent/types.ts",
					"line": 8,
					"character": 27
				}
			],
			"type": {
				"type": "intrinsic",
				"name": "string"
			}
		},
		{
			"id": 83,
			"name": "DomainEventPayloadType",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 84,
					"name": "EventTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/events.types.ts",
					"line": 8,
					"character": 34
				}
			],
			"type": {
				"type": "unknown",
				"name": "DomainEventPayloadType<EventTypeFactory>"
			}
		},
		{
			"id": 333,
			"name": "DomainEventTypeFactoryFromSerializedPayload",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A factory to get an instance of a domain event from\nthe serialized version of its payload",
				"tags": [
					{
						"tag": "param",
						"text": "The serialized version of the domain event's payload",
						"param": "serializePayload"
					},
					{
						"tag": "returns",
						"text": "An instance of the domain event\n"
					}
				]
			},
			"typeParameter": [
				{
					"id": 334,
					"name": "Name",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomainEventName",
						"id": 331
					}
				},
				{
					"id": 335,
					"name": "Payload",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "DomaiEventPayload",
						"id": 332
					}
				},
				{
					"id": 336,
					"name": "State",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					}
				}
			],
			"sources": [
				{
					"fileName": "DomainEvent/types.ts",
					"line": 110,
					"character": 55
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 337,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 338,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 339,
									"name": "serializedPayload",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "DomainEventInstance",
								"id": 296,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Name",
										"constraint": {
											"type": "reference",
											"name": "DomainEventName",
											"id": 331
										}
									},
									{
										"type": "typeParameter",
										"name": "Payload",
										"constraint": {
											"type": "reference",
											"name": "DomaiEventPayload",
											"id": 332
										}
									},
									{
										"type": "typeParameter",
										"name": "State",
										"constraint": {
											"type": "reference",
											"name": "AggregateState",
											"id": 282
										}
									}
								]
							}
						}
					],
					"sources": [
						{
							"fileName": "DomainEvent/types.ts",
							"line": 114,
							"character": 3
						}
					]
				}
			}
		},
		{
			"id": 340,
			"name": "DomainEventTypeFactoryPayload",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "The payload type inferred\nfrom a DomainEventTypeFactory signature"
			},
			"typeParameter": [
				{
					"id": 341,
					"name": "EventTypeFactory",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"sources": [
				{
					"fileName": "DomainEvent/types.ts",
					"line": 120,
					"character": 41
				}
			],
			"type": {
				"type": "unknown",
				"name": "DomainEventTypeFactoryPayload<EventTypeFactory>"
			}
		},
		{
			"id": 70,
			"name": "ErrorConstructorData",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 71,
					"name": "Ctor",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/errors.types.ts",
					"line": 8,
					"character": 32
				}
			],
			"type": {
				"type": "unknown",
				"name": "ErrorConstructorData<Ctor>"
			}
		},
		{
			"id": 10,
			"name": "ErrorWithData",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 11,
					"name": "Data",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorData",
						"id": 5
					}
				}
			],
			"sources": [
				{
					"fileName": "CustomError/types.ts",
					"line": 16,
					"character": 25
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"name": "Error"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 12,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 13,
									"name": "data",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "CustomError/types.ts",
											"line": 18,
											"character": 6
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "Data",
										"constraint": {
											"type": "reference",
											"name": "CustomErrorData",
											"id": 5
										}
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										13
									]
								}
							],
							"sources": [
								{
									"fileName": "CustomError/types.ts",
									"line": 16,
									"character": 65
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 284,
			"name": "GenericAggregateInstance",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"comment": {
				"shortText": "A generic instance of an aggregate"
			},
			"sources": [
				{
					"fileName": "Aggregate/types.ts",
					"line": 264,
					"character": 36
				}
			],
			"type": {
				"type": "reference",
				"name": "AggregateInstance",
				"id": 202,
				"typeArguments": [
					{
						"type": "reference",
						"name": "BoundedContext",
						"id": 279
					},
					{
						"type": "reference",
						"name": "AggregateTypeName",
						"id": 280
					},
					{
						"type": "reference",
						"name": "AggregateIdentity",
						"id": 281
					},
					{
						"type": "reference",
						"name": "AggregateState",
						"id": 282
					},
					{
						"type": "reference",
						"name": "AggregateQueryDefinition",
						"id": 105,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateQueryName",
								"id": 113
							},
							{
								"type": "reference",
								"name": "AggregateState",
								"id": 282
							},
							{
								"type": "reference",
								"name": "AggregateQueryInput",
								"id": 114
							},
							{
								"type": "reference",
								"name": "AggregateQueryOutput",
								"id": 115
							}
						]
					},
					{
						"type": "reference",
						"name": "CustomErrorTypeFactory",
						"id": 17,
						"typeArguments": [
							{
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							},
							{
								"type": "reference",
								"name": "CustomErrorData",
								"id": 5
							}
						]
					},
					{
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							},
							{
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							},
							{
								"type": "reference",
								"name": "AggregateState",
								"id": 282
							}
						]
					},
					{
						"type": "reference",
						"name": "AggregateCommandDefinition",
						"id": 149,
						"typeArguments": [
							{
								"type": "reference",
								"name": "AggregateCommandName",
								"id": 163
							},
							{
								"type": "reference",
								"name": "AggregateCommandInput",
								"id": 164
							},
							{
								"type": "reference",
								"name": "AggregateState",
								"id": 282
							},
							{
								"type": "reference",
								"name": "AggregateQueryDefinition",
								"id": 105,
								"typeArguments": [
									{
										"type": "reference",
										"name": "AggregateQueryName",
										"id": 113
									},
									{
										"type": "reference",
										"name": "AggregateState",
										"id": 282
									},
									{
										"type": "reference",
										"name": "AggregateQueryInput",
										"id": 114
									},
									{
										"type": "reference",
										"name": "AggregateQueryOutput",
										"id": 115
									}
								]
							},
							{
								"type": "reference",
								"name": "CustomErrorTypeFactory",
								"id": 17,
								"typeArguments": [
									{
										"type": "reference",
										"name": "CustomErrorName",
										"id": 4
									},
									{
										"type": "reference",
										"name": "CustomErrorData",
										"id": 5
									}
								]
							},
							{
								"type": "reference",
								"name": "DomainEventTypeFactory",
								"id": 322,
								"typeArguments": [
									{
										"type": "reference",
										"name": "DomainEventName",
										"id": 331
									},
									{
										"type": "reference",
										"name": "DomaiEventPayload",
										"id": 332
									},
									{
										"type": "reference",
										"name": "AggregateState",
										"id": 282
									}
								]
							},
							{
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							},
							{
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							}
						]
					}
				]
			}
		},
		{
			"id": 289,
			"name": "MapDiscriminatedUnion",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 290,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "Record",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "K"
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 291,
					"name": "K",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "typeParameter",
							"name": "T"
						}
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/types.ts",
					"line": 485,
					"character": 33
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 292,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"sources": [
						{
							"fileName": "Aggregate/types.ts",
							"line": 488,
							"character": 3
						}
					]
				}
			}
		},
		{
			"id": 6,
			"name": "NamedError",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 7,
					"name": "Name",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "CustomErrorName",
						"id": 4
					}
				}
			],
			"sources": [
				{
					"fileName": "CustomError/types.ts",
					"line": 12,
					"character": 22
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"name": "Error"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 8,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 9,
									"name": "name",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "CustomError/types.ts",
											"line": 13,
											"character": 15
										}
									],
									"type": {
										"type": "typeParameter",
										"name": "Name",
										"constraint": {
											"type": "reference",
											"name": "CustomErrorName",
											"id": 4
										}
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										9
									]
								}
							],
							"sources": [
								{
									"fileName": "CustomError/types.ts",
									"line": 12,
									"character": 62
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 540,
			"name": "PersistedDomainEvent",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "Repository/types.ts",
					"line": 17,
					"character": 32
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"name": "SerializedDomainEvent",
						"id": 293
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 541,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 542,
									"name": "aggregate",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Repository/types.ts",
											"line": 18,
											"character": 20
										}
									],
									"type": {
										"type": "reference",
										"name": "AggregateIdentifier",
										"id": 493
									}
								},
								{
									"id": 544,
									"name": "correlationId",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Repository/types.ts",
											"line": 20,
											"character": 24
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 543,
									"name": "id",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Repository/types.ts",
											"line": 19,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										542,
										544,
										543
									]
								}
							],
							"sources": [
								{
									"fileName": "Repository/types.ts",
									"line": 17,
									"character": 58
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 124,
			"name": "QueryImplementationInput",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 125,
					"name": "QueryImplementation",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/queries.types.ts",
					"line": 27,
					"character": 36
				}
			],
			"type": {
				"type": "unknown",
				"name": "QueryImplementationInput<QueryImplementation>"
			}
		},
		{
			"id": 126,
			"name": "QueryImplementationOutput",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 127,
					"name": "QueryImplementation",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/queries.types.ts",
					"line": 31,
					"character": 37
				}
			],
			"type": {
				"type": "unknown",
				"name": "QueryImplementationOutput<QueryImplementation>"
			}
		},
		{
			"id": 60,
			"name": "Serializer",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"typeParameter": [
				{
					"id": 61,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {}
				}
			],
			"sources": [
				{
					"fileName": "utils/getSerializer.ts",
					"line": 11,
					"character": 22
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 62,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 63,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 64,
									"name": "t",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "T"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"sources": [
						{
							"fileName": "utils/getSerializer.ts",
							"line": 11,
							"character": 27
						}
					]
				}
			}
		},
		{
			"id": 545,
			"name": "StoredEvent",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {
				"isExported": true
			},
			"sources": [
				{
					"fileName": "Repository/InMemoryEventStore.ts",
					"line": 11,
					"character": 23
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"name": "PersistedDomainEvent",
						"id": 540
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 546,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {},
							"children": [
								{
									"id": 548,
									"name": "aggregate",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Repository/InMemoryEventStore.ts",
											"line": 13,
											"character": 20
										}
									],
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 549,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 550,
													"name": "context",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "Repository/InMemoryEventStore.ts",
															"line": 14,
															"character": 20
														}
													],
													"type": {
														"type": "reference",
														"name": "BoundedContext",
														"id": 279
													}
												},
												{
													"id": 552,
													"name": "identity",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "Repository/InMemoryEventStore.ts",
															"line": 16,
															"character": 21
														}
													],
													"type": {
														"type": "reference",
														"name": "AggregateIdentity",
														"id": 281
													}
												},
												{
													"id": 551,
													"name": "type",
													"kind": 32,
													"kindString": "Variable",
													"flags": {},
													"sources": [
														{
															"fileName": "Repository/InMemoryEventStore.ts",
															"line": 15,
															"character": 17
														}
													],
													"type": {
														"type": "reference",
														"name": "AggregateTypeName",
														"id": 280
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														550,
														552,
														551
													]
												}
											],
											"sources": [
												{
													"fileName": "Repository/InMemoryEventStore.ts",
													"line": 13,
													"character": 21
												}
											]
										}
									}
								},
								{
									"id": 547,
									"name": "id",
									"kind": 32,
									"kindString": "Variable",
									"flags": {},
									"sources": [
										{
											"fileName": "Repository/InMemoryEventStore.ts",
											"line": 12,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										548,
										547
									]
								}
							],
							"sources": [
								{
									"fileName": "Repository/InMemoryEventStore.ts",
									"line": 11,
									"character": 48
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 407,
			"name": "TupleItem",
			"kind": 4194304,
			"kindString": "Type alias",
			"flags": {},
			"sources": [
				{
					"fileName": "utils/tuple.ts",
					"line": 1,
					"character": 14
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "intrinsic",
						"name": "string"
					},
					{
						"type": "intrinsic",
						"name": "number"
					},
					{
						"type": "intrinsic",
						"name": "boolean"
					},
					{
						"type": "intrinsic",
						"name": "undefined"
					},
					{
						"type": "intrinsic",
						"name": "null"
					},
					{
						"type": "intrinsic",
						"name": "void"
					},
					{
						"type": "reference",
						"name": "__type"
					}
				]
			}
		},
		{
			"id": 459,
			"name": "BadAggregateConstruction",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "Aggregate/index.ts",
					"line": 59,
					"character": 37
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 460,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 461,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 462,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 463,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "Data"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CustomErrorInstance",
								"id": 14,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Name"
									},
									{
										"type": "typeParameter",
										"name": "Data"
									}
								]
							}
						}
					],
					"children": [
						{
							"id": 464,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "CustomError/types.ts",
									"line": 55,
									"character": 19
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "Name"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								464
							]
						}
					]
				}
			},
			"defaultValue": " CustomError<\n  'BadAggregateConstruction',\n  WithOriginalError\n>({\n  name: 'BadAggregateConstruction',\n})"
		},
		{
			"id": 465,
			"name": "BadAggregateDefinition",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "Aggregate/index.ts",
					"line": 66,
					"character": 35
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 466,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 467,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 468,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 469,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "Data"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CustomErrorInstance",
								"id": 14,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Name"
									},
									{
										"type": "typeParameter",
										"name": "Data"
									}
								]
							}
						}
					],
					"children": [
						{
							"id": 470,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "CustomError/types.ts",
									"line": 55,
									"character": 19
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "Name"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								470
							]
						}
					]
				}
			},
			"defaultValue": " CustomError<\n  'BadAggregateDefinition',\n  WithOriginalError\n>({\n  name: 'BadAggregateDefinition',\n})"
		},
		{
			"id": 481,
			"name": "BadDomainEventDefinition",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "DomainEvent/index.ts",
					"line": 15,
					"character": 37
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 482,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 483,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 484,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 485,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "Data"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CustomErrorInstance",
								"id": 14,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Name"
									},
									{
										"type": "typeParameter",
										"name": "Data"
									}
								]
							}
						}
					],
					"children": [
						{
							"id": 486,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "CustomError/types.ts",
									"line": 55,
									"character": 19
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "Name"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								486
							]
						}
					]
				}
			},
			"defaultValue": " CustomError<\n  'DomainEventDefinitionError',\n  { readonly originalError: Error }\n>({\n  name: 'DomainEventDefinitionError',\n})"
		},
		{
			"id": 580,
			"name": "BadRepositoryDefinition",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "Repository/index.ts",
					"line": 19,
					"character": 36
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 581,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 582,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 583,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 584,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "Data"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CustomErrorInstance",
								"id": 14,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Name"
									},
									{
										"type": "typeParameter",
										"name": "Data"
									}
								]
							}
						}
					],
					"children": [
						{
							"id": 585,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "CustomError/types.ts",
									"line": 55,
									"character": 19
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "Name"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								585
							]
						}
					]
				}
			},
			"defaultValue": " CustomError<\n  'BadRepositoryDefinition',\n  WithOriginalError\n>({ name: 'BadRepositoryDefinition' })"
		},
		{
			"id": 38,
			"name": "DeserializationError",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "utils/getDeserializer.ts",
					"line": 7,
					"character": 33
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 39,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 40,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 41,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 42,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "Data"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CustomErrorInstance",
								"id": 14,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Name"
									},
									{
										"type": "typeParameter",
										"name": "Data"
									}
								]
							}
						}
					],
					"children": [
						{
							"id": 43,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "CustomError/types.ts",
									"line": 55,
									"character": 19
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "Name"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								43
							]
						}
					]
				}
			},
			"defaultValue": " CustomError<\n  'DeserializationError',\n  ErrorData\n>({\n  name: 'DeserializationError',\n})"
		},
		{
			"id": 458,
			"name": "NO_CONSISTENCY_POLICY",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "Aggregate/index.ts",
					"line": 53,
					"character": 34
				}
			],
			"type": {
				"type": "unknown",
				"name": "2"
			},
			"defaultValue": "2"
		},
		{
			"id": 592,
			"name": "RepositoryBadAggregatesListProvided",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "Repository/index.ts",
					"line": 31,
					"character": 48
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 593,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 594,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 595,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 596,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "Data"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CustomErrorInstance",
								"id": 14,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Name"
									},
									{
										"type": "typeParameter",
										"name": "Data"
									}
								]
							}
						}
					],
					"children": [
						{
							"id": 597,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "CustomError/types.ts",
									"line": 55,
									"character": 19
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "Name"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								597
							]
						}
					]
				}
			},
			"defaultValue": " CustomError<\n  'RepositoryBadAggregatesListProvided',\n  WithOriginalError\n>({\n  name: 'RepositoryBadAggregatesListProvided',\n})"
		},
		{
			"id": 598,
			"name": "RepositoryEventsLoadError",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "Repository/index.ts",
					"line": 38,
					"character": 38
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 599,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 600,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 601,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 602,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "Data"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CustomErrorInstance",
								"id": 14,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Name"
									},
									{
										"type": "typeParameter",
										"name": "Data"
									}
								]
							}
						}
					],
					"children": [
						{
							"id": 603,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "CustomError/types.ts",
									"line": 55,
									"character": 19
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "Name"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								603
							]
						}
					]
				}
			},
			"defaultValue": " CustomError<\n  'RepositoryEventsLoadError',\n  WithOriginalError\n>({\n  name: 'RepositoryEventsLoadError',\n})"
		},
		{
			"id": 586,
			"name": "RepositorySnapshotLoadError",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "Repository/index.ts",
					"line": 24,
					"character": 40
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 587,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 588,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 589,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 590,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "Data"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CustomErrorInstance",
								"id": 14,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Name"
									},
									{
										"type": "typeParameter",
										"name": "Data"
									}
								]
							}
						}
					],
					"children": [
						{
							"id": 591,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "CustomError/types.ts",
									"line": 55,
									"character": 19
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "Name"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								591
							]
						}
					]
				}
			},
			"defaultValue": " CustomError<\n  'RepositorySnapshotLoadError',\n  WithOriginalError\n>({\n  name: 'RepositorySnapshotLoadError',\n})"
		},
		{
			"id": 610,
			"name": "RepositoryWriteConcurrencyError",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "Repository/index.ts",
					"line": 51,
					"character": 44
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 611,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 612,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 613,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 614,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "Data"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CustomErrorInstance",
								"id": 14,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Name"
									},
									{
										"type": "typeParameter",
										"name": "Data"
									}
								]
							}
						}
					],
					"children": [
						{
							"id": 615,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "CustomError/types.ts",
									"line": 55,
									"character": 19
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "Name"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								615
							]
						}
					]
				}
			},
			"defaultValue": " CustomError<\n  'RepositoryWriteConcurrencyError',\n  WithOriginalError\n>({\n  name: 'RepositoryWriteConcurrencyError',\n})"
		},
		{
			"id": 604,
			"name": "RepositoryWriteError",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "Repository/index.ts",
					"line": 45,
					"character": 33
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 605,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 606,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 607,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 608,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "Data"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CustomErrorInstance",
								"id": 14,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Name"
									},
									{
										"type": "typeParameter",
										"name": "Data"
									}
								]
							}
						}
					],
					"children": [
						{
							"id": 609,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "CustomError/types.ts",
									"line": 55,
									"character": 19
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "Name"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								609
							]
						}
					]
				}
			},
			"defaultValue": " CustomError<\n  'RepositoryWriteError',\n  WithOriginalError\n>({\n  name: 'RepositoryWriteError',\n})"
		},
		{
			"id": 457,
			"name": "SOFT_CONSISTENCY_POLICY",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "Aggregate/index.ts",
					"line": 52,
					"character": 36
				}
			],
			"type": {
				"type": "unknown",
				"name": "1"
			},
			"defaultValue": "1"
		},
		{
			"id": 456,
			"name": "STRICT_CONSISTENCY_POLICY",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "Aggregate/index.ts",
					"line": 51,
					"character": 38
				}
			],
			"type": {
				"type": "unknown",
				"name": "0"
			},
			"defaultValue": "0"
		},
		{
			"id": 54,
			"name": "SerializationError",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "utils/getSerializer.ts",
					"line": 7,
					"character": 31
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 55,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {},
					"signatures": [
						{
							"id": 56,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {},
							"parameters": [
								{
									"id": 57,
									"name": "message",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "undefined"
											}
										]
									}
								},
								{
									"id": 58,
									"name": "data",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {},
									"type": {
										"type": "typeParameter",
										"name": "Data"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "CustomErrorInstance",
								"id": 14,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Name"
									},
									{
										"type": "typeParameter",
										"name": "Data"
									}
								]
							}
						}
					],
					"children": [
						{
							"id": 59,
							"name": "name",
							"kind": 32,
							"kindString": "Variable",
							"flags": {},
							"sources": [
								{
									"fileName": "CustomError/types.ts",
									"line": 55,
									"character": 19
								}
							],
							"type": {
								"type": "typeParameter",
								"name": "Name"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								59
							]
						}
					]
				}
			},
			"defaultValue": " CustomError<'SerializationError', ErrorData>({\n  name: 'SerializationError',\n})"
		},
		{
			"id": 23,
			"name": "validNameDescription",
			"kind": 32,
			"kindString": "Variable",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"sources": [
				{
					"fileName": "utils/isValidName.ts",
					"line": 7,
					"character": 33
				}
			],
			"type": {
				"type": "stringLiteral",
				"value": "string starting with a letter and composed by letters, numbers and underscores only"
			},
			"defaultValue": " `string starting with a letter and composed by letters, numbers and underscores only`"
		},
		{
			"id": 471,
			"name": "Aggregate",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 472,
					"name": "Aggregate",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 473,
							"name": "BC",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "BoundedContext",
								"id": 279
							}
						},
						{
							"id": 474,
							"name": "TypeName",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateTypeName",
								"id": 280
							}
						},
						{
							"id": 475,
							"name": "State",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateState",
								"id": 282
							}
						},
						{
							"id": 476,
							"name": "Query",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateQueryDefinition",
								"id": 105,
								"typeArguments": [
									{
										"type": "reference",
										"name": "AggregateQueryName",
										"id": 113
									},
									{
										"type": "typeParameter",
										"name": "State"
									},
									{
										"type": "reference",
										"name": "AggregateQueryInput",
										"id": 114
									},
									{
										"type": "reference",
										"name": "AggregateQueryOutput",
										"id": 115
									}
								]
							}
						},
						{
							"id": 477,
							"name": "ErrorTypeFactory",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "CustomErrorTypeFactory",
								"id": 17,
								"typeArguments": [
									{
										"type": "reference",
										"name": "CustomErrorName",
										"id": 4
									},
									{
										"type": "reference",
										"name": "CustomErrorData",
										"id": 5
									}
								]
							}
						},
						{
							"id": 478,
							"name": "EventTypeFactory",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "DomainEventTypeFactory",
								"id": 322,
								"typeArguments": [
									{
										"type": "reference",
										"name": "DomainEventName",
										"id": 331
									},
									{
										"type": "reference",
										"name": "DomaiEventPayload",
										"id": 332
									},
									{
										"type": "typeParameter",
										"name": "State"
									}
								]
							}
						},
						{
							"id": 479,
							"name": "Command",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateCommandDefinition",
								"id": 149,
								"typeArguments": [
									{
										"type": "reference",
										"name": "AggregateCommandName",
										"id": 163
									},
									{
										"type": "reference",
										"name": "AggregateCommandInput",
										"id": 164
									},
									{
										"type": "typeParameter",
										"name": "State"
									},
									{
										"type": "typeParameter",
										"name": "Query"
									},
									{
										"type": "typeParameter",
										"name": "ErrorTypeFactory"
									},
									{
										"type": "typeParameter",
										"name": "EventTypeFactory"
									},
									{
										"type": "unknown",
										"name": "ErrorTypeFactory[\"name\"]"
									},
									{
										"type": "unknown",
										"name": "EventTypeFactory[\"name\"]"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 480,
							"name": "definition",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateDefinition",
								"id": 242,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "BC",
										"constraint": {
											"type": "reference",
											"name": "BoundedContext",
											"id": 279
										}
									},
									{
										"type": "typeParameter",
										"name": "TypeName",
										"constraint": {
											"type": "reference",
											"name": "AggregateTypeName",
											"id": 280
										}
									},
									{
										"type": "typeParameter",
										"name": "State",
										"constraint": {
											"type": "reference",
											"name": "AggregateState",
											"id": 282
										}
									},
									{
										"type": "typeParameter",
										"name": "Query",
										"constraint": {
											"type": "reference",
											"name": "AggregateQueryDefinition",
											"id": 105,
											"typeArguments": [
												{
													"type": "reference",
													"name": "AggregateQueryName",
													"id": 113
												},
												{
													"type": "typeParameter",
													"name": "State"
												},
												{
													"type": "reference",
													"name": "AggregateQueryInput",
													"id": 114
												},
												{
													"type": "reference",
													"name": "AggregateQueryOutput",
													"id": 115
												}
											]
										}
									},
									{
										"type": "typeParameter",
										"name": "ErrorTypeFactory",
										"constraint": {
											"type": "reference",
											"name": "CustomErrorTypeFactory",
											"id": 17,
											"typeArguments": [
												{
													"type": "reference",
													"name": "CustomErrorName",
													"id": 4
												},
												{
													"type": "reference",
													"name": "CustomErrorData",
													"id": 5
												}
											]
										}
									},
									{
										"type": "typeParameter",
										"name": "EventTypeFactory",
										"constraint": {
											"type": "reference",
											"name": "DomainEventTypeFactory",
											"id": 322,
											"typeArguments": [
												{
													"type": "reference",
													"name": "DomainEventName",
													"id": 331
												},
												{
													"type": "reference",
													"name": "DomaiEventPayload",
													"id": 332
												},
												{
													"type": "typeParameter",
													"name": "State"
												}
											]
										}
									},
									{
										"type": "typeParameter",
										"name": "Command",
										"constraint": {
											"type": "reference",
											"name": "AggregateCommandDefinition",
											"id": 149,
											"typeArguments": [
												{
													"type": "reference",
													"name": "AggregateCommandName",
													"id": 163
												},
												{
													"type": "reference",
													"name": "AggregateCommandInput",
													"id": 164
												},
												{
													"type": "typeParameter",
													"name": "State"
												},
												{
													"type": "typeParameter",
													"name": "Query"
												},
												{
													"type": "typeParameter",
													"name": "ErrorTypeFactory"
												},
												{
													"type": "typeParameter",
													"name": "EventTypeFactory"
												},
												{
													"type": "unknown",
													"name": "ErrorTypeFactory[\"name\"]"
												},
												{
													"type": "unknown",
													"name": "EventTypeFactory[\"name\"]"
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateTypeFactory",
						"id": 263,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "BC",
								"constraint": {
									"type": "reference",
									"name": "BoundedContext",
									"id": 279
								}
							},
							{
								"type": "typeParameter",
								"name": "TypeName",
								"constraint": {
									"type": "reference",
									"name": "AggregateTypeName",
									"id": 280
								}
							},
							{
								"type": "reference",
								"name": "AggregateIdentity",
								"id": 281
							},
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							},
							{
								"type": "typeParameter",
								"name": "Query",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryDefinition",
									"id": 105,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateQueryName",
											"id": 113
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "reference",
											"name": "AggregateQueryInput",
											"id": 114
										},
										{
											"type": "reference",
											"name": "AggregateQueryOutput",
											"id": 115
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "CustomErrorTypeFactory",
									"id": 17,
									"typeArguments": [
										{
											"type": "reference",
											"name": "CustomErrorName",
											"id": 4
										},
										{
											"type": "reference",
											"name": "CustomErrorData",
											"id": 5
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "EventTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "DomainEventTypeFactory",
									"id": 322,
									"typeArguments": [
										{
											"type": "reference",
											"name": "DomainEventName",
											"id": 331
										},
										{
											"type": "reference",
											"name": "DomaiEventPayload",
											"id": 332
										},
										{
											"type": "typeParameter",
											"name": "State"
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "Command",
								"constraint": {
									"type": "reference",
									"name": "AggregateCommandDefinition",
									"id": 149,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateCommandName",
											"id": 163
										},
										{
											"type": "reference",
											"name": "AggregateCommandInput",
											"id": 164
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "typeParameter",
											"name": "Query"
										},
										{
											"type": "typeParameter",
											"name": "ErrorTypeFactory"
										},
										{
											"type": "typeParameter",
											"name": "EventTypeFactory"
										},
										{
											"type": "unknown",
											"name": "ErrorTypeFactory[\"name\"]"
										},
										{
											"type": "unknown",
											"name": "EventTypeFactory[\"name\"]"
										}
									]
								}
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/index.ts",
					"line": 73,
					"character": 25
				}
			]
		},
		{
			"id": 355,
			"name": "CommandInterface",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 356,
					"name": "CommandInterface",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 357,
							"name": "State",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateState",
								"id": 282
							}
						},
						{
							"id": 358,
							"name": "Query",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateQueryDefinition",
								"id": 105,
								"typeArguments": [
									{
										"type": "reference",
										"name": "AggregateQueryName",
										"id": 113
									},
									{
										"type": "typeParameter",
										"name": "State"
									},
									{
										"type": "reference",
										"name": "AggregateQueryInput",
										"id": 114
									},
									{
										"type": "reference",
										"name": "AggregateQueryOutput",
										"id": 115
									}
								]
							}
						},
						{
							"id": 359,
							"name": "QueryDictionary",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateQueryDictionary",
								"id": 131,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "State"
									},
									{
										"type": "typeParameter",
										"name": "Query"
									}
								]
							}
						},
						{
							"id": 360,
							"name": "ErrorTypeFactory",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "CustomErrorTypeFactory",
								"id": 17,
								"typeArguments": [
									{
										"type": "reference",
										"name": "CustomErrorName",
										"id": 4
									},
									{
										"type": "reference",
										"name": "CustomErrorData",
										"id": 5
									}
								]
							}
						},
						{
							"id": 361,
							"name": "ErrorDictionary",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateErrorDictionary",
								"id": 72,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "ErrorTypeFactory"
									}
								]
							}
						},
						{
							"id": 362,
							"name": "EventTypeFactory",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "DomainEventTypeFactory",
								"id": 322,
								"typeArguments": [
									{
										"type": "reference",
										"name": "DomainEventName",
										"id": 331
									},
									{
										"type": "reference",
										"name": "DomaiEventPayload",
										"id": 332
									},
									{
										"type": "typeParameter",
										"name": "State"
									}
								]
							}
						},
						{
							"id": 363,
							"name": "EventDictionary",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateEventDictionary",
								"id": 91,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "State"
									},
									{
										"type": "typeParameter",
										"name": "EventTypeFactory"
									}
								]
							}
						},
						{
							"id": 364,
							"name": "Command",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateCommandDefinition",
								"id": 149,
								"typeArguments": [
									{
										"type": "reference",
										"name": "AggregateCommandName",
										"id": 163
									},
									{
										"type": "reference",
										"name": "AggregateCommandInput",
										"id": 164
									},
									{
										"type": "typeParameter",
										"name": "State"
									},
									{
										"type": "typeParameter",
										"name": "Query"
									},
									{
										"type": "typeParameter",
										"name": "ErrorTypeFactory"
									},
									{
										"type": "typeParameter",
										"name": "EventTypeFactory"
									},
									{
										"type": "unknown",
										"name": "ErrorTypeFactory[\"name\"]"
									},
									{
										"type": "unknown",
										"name": "EventTypeFactory[\"name\"]"
									}
								]
							}
						},
						{
							"id": 365,
							"name": "CommandDictionary",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateCommandDictionary",
								"id": 185,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "State"
									},
									{
										"type": "typeParameter",
										"name": "Query"
									},
									{
										"type": "typeParameter",
										"name": "ErrorTypeFactory"
									},
									{
										"type": "typeParameter",
										"name": "EventTypeFactory"
									},
									{
										"type": "typeParameter",
										"name": "Command"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 366,
							"name": "config",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "CommandInterfaceConfiguration",
								"id": 342,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "State",
										"constraint": {
											"type": "reference",
											"name": "AggregateState",
											"id": 282
										}
									},
									{
										"type": "typeParameter",
										"name": "Query",
										"constraint": {
											"type": "reference",
											"name": "AggregateQueryDefinition",
											"id": 105,
											"typeArguments": [
												{
													"type": "reference",
													"name": "AggregateQueryName",
													"id": 113
												},
												{
													"type": "typeParameter",
													"name": "State"
												},
												{
													"type": "reference",
													"name": "AggregateQueryInput",
													"id": 114
												},
												{
													"type": "reference",
													"name": "AggregateQueryOutput",
													"id": 115
												}
											]
										}
									},
									{
										"type": "typeParameter",
										"name": "QueryDictionary",
										"constraint": {
											"type": "reference",
											"name": "AggregateQueryDictionary",
											"id": 131,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "State"
												},
												{
													"type": "typeParameter",
													"name": "Query"
												}
											]
										}
									},
									{
										"type": "typeParameter",
										"name": "ErrorTypeFactory",
										"constraint": {
											"type": "reference",
											"name": "CustomErrorTypeFactory",
											"id": 17,
											"typeArguments": [
												{
													"type": "reference",
													"name": "CustomErrorName",
													"id": 4
												},
												{
													"type": "reference",
													"name": "CustomErrorData",
													"id": 5
												}
											]
										}
									},
									{
										"type": "typeParameter",
										"name": "ErrorDictionary",
										"constraint": {
											"type": "reference",
											"name": "AggregateErrorDictionary",
											"id": 72,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "ErrorTypeFactory"
												}
											]
										}
									},
									{
										"type": "typeParameter",
										"name": "EventTypeFactory",
										"constraint": {
											"type": "reference",
											"name": "DomainEventTypeFactory",
											"id": 322,
											"typeArguments": [
												{
													"type": "reference",
													"name": "DomainEventName",
													"id": 331
												},
												{
													"type": "reference",
													"name": "DomaiEventPayload",
													"id": 332
												},
												{
													"type": "typeParameter",
													"name": "State"
												}
											]
										}
									},
									{
										"type": "typeParameter",
										"name": "EventDictionary",
										"constraint": {
											"type": "reference",
											"name": "AggregateEventDictionary",
											"id": 91,
											"typeArguments": [
												{
													"type": "typeParameter",
													"name": "State"
												},
												{
													"type": "typeParameter",
													"name": "EventTypeFactory"
												}
											]
										}
									},
									{
										"type": "typeParameter",
										"name": "Command",
										"constraint": {
											"type": "reference",
											"name": "AggregateCommandDefinition",
											"id": 149,
											"typeArguments": [
												{
													"type": "reference",
													"name": "AggregateCommandName",
													"id": 163
												},
												{
													"type": "reference",
													"name": "AggregateCommandInput",
													"id": 164
												},
												{
													"type": "typeParameter",
													"name": "State"
												},
												{
													"type": "typeParameter",
													"name": "Query"
												},
												{
													"type": "typeParameter",
													"name": "ErrorTypeFactory"
												},
												{
													"type": "typeParameter",
													"name": "EventTypeFactory"
												},
												{
													"type": "unknown",
													"name": "ErrorTypeFactory[\"name\"]"
												},
												{
													"type": "unknown",
													"name": "EventTypeFactory[\"name\"]"
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateCommandInterface",
						"id": 191,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							},
							{
								"type": "typeParameter",
								"name": "Query",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryDefinition",
									"id": 105,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateQueryName",
											"id": 113
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "reference",
											"name": "AggregateQueryInput",
											"id": 114
										},
										{
											"type": "reference",
											"name": "AggregateQueryOutput",
											"id": 115
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "CustomErrorTypeFactory",
									"id": 17,
									"typeArguments": [
										{
											"type": "reference",
											"name": "CustomErrorName",
											"id": 4
										},
										{
											"type": "reference",
											"name": "CustomErrorData",
											"id": 5
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "EventTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "DomainEventTypeFactory",
									"id": 322,
									"typeArguments": [
										{
											"type": "reference",
											"name": "DomainEventName",
											"id": 331
										},
										{
											"type": "reference",
											"name": "DomaiEventPayload",
											"id": 332
										},
										{
											"type": "typeParameter",
											"name": "State"
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "Command",
								"constraint": {
									"type": "reference",
									"name": "AggregateCommandDefinition",
									"id": 149,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateCommandName",
											"id": 163
										},
										{
											"type": "reference",
											"name": "AggregateCommandInput",
											"id": 164
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "typeParameter",
											"name": "Query"
										},
										{
											"type": "typeParameter",
											"name": "ErrorTypeFactory"
										},
										{
											"type": "typeParameter",
											"name": "EventTypeFactory"
										},
										{
											"type": "unknown",
											"name": "ErrorTypeFactory[\"name\"]"
										},
										{
											"type": "unknown",
											"name": "EventTypeFactory[\"name\"]"
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "CommandDictionary",
								"constraint": {
									"type": "reference",
									"name": "AggregateCommandDictionary",
									"id": 185,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "typeParameter",
											"name": "Query"
										},
										{
											"type": "typeParameter",
											"name": "ErrorTypeFactory"
										},
										{
											"type": "typeParameter",
											"name": "EventTypeFactory"
										},
										{
											"type": "typeParameter",
											"name": "Command"
										}
									]
								}
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/CommandInterface.ts",
					"line": 88,
					"character": 40
				}
			]
		},
		{
			"id": 27,
			"name": "CustomError",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 28,
					"name": "CustomError",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 29,
							"name": "Name",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "CustomErrorName",
								"id": 4
							}
						},
						{
							"id": 30,
							"name": "Data",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "CustomErrorData",
								"id": 5
							}
						}
					],
					"parameters": [
						{
							"id": 31,
							"name": "definition",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "CustomErrorTypeDefinition",
								"id": 1,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Name",
										"constraint": {
											"type": "reference",
											"name": "CustomErrorName",
											"id": 4
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "CustomErrorTypeFactory",
						"id": 17,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "Name",
								"constraint": {
									"type": "reference",
									"name": "CustomErrorName",
									"id": 4
								}
							},
							{
								"type": "typeParameter",
								"name": "Data",
								"constraint": {
									"type": "reference",
									"name": "CustomErrorData",
									"id": 5
								}
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "CustomError/index.ts",
					"line": 9,
					"character": 27
				}
			]
		},
		{
			"id": 487,
			"name": "DomainEvent",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 488,
					"name": "DomainEvent",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 489,
							"name": "Name",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "DomainEventName",
								"id": 331
							}
						},
						{
							"id": 490,
							"name": "State",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateState",
								"id": 282
							}
						},
						{
							"id": 491,
							"name": "Payload",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "DomaiEventPayload",
								"id": 332
							}
						}
					],
					"parameters": [
						{
							"id": 492,
							"name": "definition",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "DomainEventTypeDefinition",
								"id": 309,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "Name",
										"constraint": {
											"type": "reference",
											"name": "DomainEventName",
											"id": 331
										}
									},
									{
										"type": "typeParameter",
										"name": "Payload",
										"constraint": {
											"type": "reference",
											"name": "DomaiEventPayload",
											"id": 332
										}
									},
									{
										"type": "typeParameter",
										"name": "State",
										"constraint": {
											"type": "reference",
											"name": "AggregateState",
											"id": 282
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "DomainEventTypeFactory",
						"id": 322,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "Name",
								"constraint": {
									"type": "reference",
									"name": "DomainEventName",
									"id": 331
								}
							},
							{
								"type": "typeParameter",
								"name": "Payload",
								"constraint": {
									"type": "reference",
									"name": "DomaiEventPayload",
									"id": 332
								}
							},
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "DomainEvent/index.ts",
					"line": 22,
					"character": 27
				}
			]
		},
		{
			"id": 376,
			"name": "EmissionInterface",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 377,
					"name": "EmissionInterface",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 378,
							"name": "State",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateState",
								"id": 282
							}
						},
						{
							"id": 379,
							"name": "EventTypeFactory",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "DomainEventTypeFactory",
								"id": 322,
								"typeArguments": [
									{
										"type": "reference",
										"name": "DomainEventName",
										"id": 331
									},
									{
										"type": "reference",
										"name": "DomaiEventPayload",
										"id": 332
									},
									{
										"type": "typeParameter",
										"name": "State"
									}
								]
							}
						},
						{
							"id": 380,
							"name": "EventDictionary",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateEventDictionary",
								"id": 91,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "State"
									},
									{
										"type": "typeParameter",
										"name": "EventTypeFactory"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 381,
							"name": "config",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "EmissionInterfaceConfiguration",
								"id": 367,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "State",
										"constraint": {
											"type": "reference",
											"name": "AggregateState",
											"id": 282
										}
									},
									{
										"type": "typeParameter",
										"name": "EventTypeFactory",
										"constraint": {
											"type": "reference",
											"name": "DomainEventTypeFactory",
											"id": 322,
											"typeArguments": [
												{
													"type": "reference",
													"name": "DomainEventName",
													"id": 331
												},
												{
													"type": "reference",
													"name": "DomaiEventPayload",
													"id": 332
												},
												{
													"type": "typeParameter",
													"name": "State"
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateEmissionInterface",
						"id": 94,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							},
							{
								"type": "typeParameter",
								"name": "EventTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "DomainEventTypeFactory",
									"id": 322,
									"typeArguments": [
										{
											"type": "reference",
											"name": "DomainEventName",
											"id": 331
										},
										{
											"type": "reference",
											"name": "DomaiEventPayload",
											"id": 332
										},
										{
											"type": "typeParameter",
											"name": "State"
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "EventDictionary",
								"constraint": {
									"type": "reference",
									"name": "AggregateEventDictionary",
									"id": 91,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "typeParameter",
											"name": "EventTypeFactory"
										}
									]
								}
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/EmissionInterface.ts",
					"line": 28,
					"character": 41
				}
			]
		},
		{
			"id": 385,
			"name": "ErrorInterface",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 386,
					"name": "ErrorInterface",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 387,
							"name": "ErrorTypeFactory",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "CustomErrorTypeFactory",
								"id": 17,
								"typeArguments": [
									{
										"type": "reference",
										"name": "CustomErrorName",
										"id": 4
									},
									{
										"type": "reference",
										"name": "CustomErrorData",
										"id": 5
									}
								]
							}
						},
						{
							"id": 388,
							"name": "ErrorDictionary",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateErrorDictionary",
								"id": 72,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "ErrorTypeFactory"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 389,
							"name": "config",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ErrorInterfaceConfiguration",
								"id": 382,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "ErrorTypeFactory",
										"constraint": {
											"type": "reference",
											"name": "CustomErrorTypeFactory",
											"id": 17,
											"typeArguments": [
												{
													"type": "reference",
													"name": "CustomErrorName",
													"id": 4
												},
												{
													"type": "reference",
													"name": "CustomErrorData",
													"id": 5
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateErrorInterface",
						"id": 74,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "ErrorTypeFactory",
								"constraint": {
									"type": "reference",
									"name": "CustomErrorTypeFactory",
									"id": 17,
									"typeArguments": [
										{
											"type": "reference",
											"name": "CustomErrorName",
											"id": 4
										},
										{
											"type": "reference",
											"name": "CustomErrorData",
											"id": 5
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "ErrorDictionary",
								"constraint": {
									"type": "reference",
									"name": "AggregateErrorDictionary",
									"id": 72,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "ErrorTypeFactory"
										}
									]
								}
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/ErrorInterface.ts",
					"line": 20,
					"character": 38
				}
			]
		},
		{
			"id": 553,
			"name": "InMemoryEventStore",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 554,
					"name": "InMemoryEventStore",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "EventStore",
						"id": 501
					}
				}
			],
			"sources": [
				{
					"fileName": "Repository/InMemoryEventStore.ts",
					"line": 20,
					"character": 31
				}
			]
		},
		{
			"id": 568,
			"name": "InMemorySnapshotService",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 569,
					"name": "InMemorySnapshotService",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"type": {
						"type": "reference",
						"name": "SnapshotService",
						"id": 512
					}
				}
			],
			"sources": [
				{
					"fileName": "Repository/InMemorySnapshotService.ts",
					"line": 10,
					"character": 36
				}
			]
		},
		{
			"id": 397,
			"name": "QueryInterface",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 398,
					"name": "QueryInterface",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 399,
							"name": "State",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateState",
								"id": 282
							}
						},
						{
							"id": 400,
							"name": "Query",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateQueryDefinition",
								"id": 105,
								"typeArguments": [
									{
										"type": "reference",
										"name": "AggregateQueryName",
										"id": 113
									},
									{
										"type": "typeParameter",
										"name": "State"
									},
									{
										"type": "reference",
										"name": "AggregateQueryInput",
										"id": 114
									},
									{
										"type": "reference",
										"name": "AggregateQueryOutput",
										"id": 115
									}
								]
							}
						},
						{
							"id": 401,
							"name": "QueryDictionary",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "AggregateQueryDictionary",
								"id": 131,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "State"
									},
									{
										"type": "typeParameter",
										"name": "Query"
									}
								]
							}
						}
					],
					"parameters": [
						{
							"id": 402,
							"name": "config",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "QueryInterfaceConfiguration",
								"id": 390,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "State",
										"constraint": {
											"type": "reference",
											"name": "AggregateState",
											"id": 282
										}
									},
									{
										"type": "typeParameter",
										"name": "Query",
										"constraint": {
											"type": "reference",
											"name": "AggregateQueryDefinition",
											"id": 105,
											"typeArguments": [
												{
													"type": "reference",
													"name": "AggregateQueryName",
													"id": 113
												},
												{
													"type": "typeParameter",
													"name": "State"
												},
												{
													"type": "reference",
													"name": "AggregateQueryInput",
													"id": 114
												},
												{
													"type": "reference",
													"name": "AggregateQueryOutput",
													"id": 115
												}
											]
										}
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "AggregateQueryInterface",
						"id": 134,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "State",
								"constraint": {
									"type": "reference",
									"name": "AggregateState",
									"id": 282
								}
							},
							{
								"type": "typeParameter",
								"name": "Query",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryDefinition",
									"id": 105,
									"typeArguments": [
										{
											"type": "reference",
											"name": "AggregateQueryName",
											"id": 113
										},
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "reference",
											"name": "AggregateQueryInput",
											"id": 114
										},
										{
											"type": "reference",
											"name": "AggregateQueryOutput",
											"id": 115
										}
									]
								}
							},
							{
								"type": "typeParameter",
								"name": "QueryDictionary",
								"constraint": {
									"type": "reference",
									"name": "AggregateQueryDictionary",
									"id": 131,
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "State"
										},
										{
											"type": "typeParameter",
											"name": "Query"
										}
									]
								}
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/QueryInterface.ts",
					"line": 24,
					"character": 38
				}
			]
		},
		{
			"id": 616,
			"name": "Repository",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 617,
					"name": "Repository",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 618,
							"name": "AggregateInstance",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "GenericAggregateInstance",
								"id": 284
							}
						}
					],
					"parameters": [
						{
							"id": 619,
							"name": "definition",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "RepositoryDefinition",
								"id": 522
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "RepositoryInstance",
						"id": 526,
						"typeArguments": [
							{
								"type": "reference",
								"name": "ReadonlyArray",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "AggregateInstance",
										"constraint": {
											"type": "reference",
											"name": "GenericAggregateInstance",
											"id": 284
										}
									}
								]
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "Repository/index.ts",
					"line": 58,
					"character": 26
				}
			]
		},
		{
			"id": 439,
			"name": "areAllValidSerializedDomainEvents",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 440,
					"name": "areAllValidSerializedDomainEvents",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 441,
							"name": "events",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ReadonlyArray",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/validateConstructorProps.ts",
					"line": 50,
					"character": 49
				}
			]
		},
		{
			"id": 403,
			"name": "getAggregateName",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 404,
					"name": "getAggregateName",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 405,
							"name": "type",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 406,
							"name": "identity",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 555,
					"name": "getAggregateName",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 556,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"originalName": "__0",
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 557,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 558,
											"name": "context",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Repository/InMemoryEventStore.ts",
													"line": 97,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 560,
											"name": "identity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Repository/InMemoryEventStore.ts",
													"line": 99,
													"character": 10
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 559,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Repository/InMemoryEventStore.ts",
													"line": 98,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												558,
												560,
												559
											]
										}
									],
									"sources": [
										{
											"fileName": "Repository/InMemoryEventStore.ts",
											"line": 96,
											"character": 26
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/aggregateUtils.ts",
					"line": 1,
					"character": 32
				},
				{
					"fileName": "Repository/InMemoryEventStore.ts",
					"line": 96,
					"character": 22
				}
			]
		},
		{
			"id": 49,
			"name": "getDeserializer",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 50,
					"name": "getDeserializer",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 51,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 52,
							"name": "deserializer",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "Deserializer",
								"id": 44,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							}
						},
						{
							"id": 53,
							"name": "errorMessage",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Deserializer",
						"id": 44,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "utils/getDeserializer.ts",
					"line": 16,
					"character": 31
				}
			]
		},
		{
			"id": 65,
			"name": "getSerializer",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 66,
					"name": "getSerializer",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 67,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"parameters": [
						{
							"id": 68,
							"name": "serializer",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "reference",
								"name": "Serializer",
								"id": 60,
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "T"
									}
								]
							}
						},
						{
							"id": 69,
							"name": "errorMessage",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isOptional": true
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "undefined"
									},
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "reference",
						"name": "Serializer",
						"id": 60,
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T"
							}
						]
					}
				}
			],
			"sources": [
				{
					"fileName": "utils/getSerializer.ts",
					"line": 13,
					"character": 29
				}
			]
		},
		{
			"id": 416,
			"name": "getSnaphotKey",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "A function to generate a snaphot persistence key"
			},
			"signatures": [
				{
					"id": 417,
					"name": "getSnaphotKey",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "A function to generate a snaphot persistence key"
					},
					"parameters": [
						{
							"id": 418,
							"name": "namespace",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The first part of a snaphot persistence key"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 419,
							"name": "name",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The name of the aggregate\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/snapshotUtils.ts",
					"line": 17,
					"character": 26
				}
			]
		},
		{
			"id": 412,
			"name": "getSnaphotNamespace",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "A function to generate the first part of a snaphot persistence key"
			},
			"signatures": [
				{
					"id": 413,
					"name": "getSnaphotNamespace",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"comment": {
						"shortText": "A function to generate the first part of a snaphot persistence key"
					},
					"parameters": [
						{
							"id": 414,
							"name": "snapshotPrefix",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The prefix to use to generate the snapshot key namespace"
							},
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "void"
									}
								]
							}
						},
						{
							"id": 415,
							"name": "context",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"comment": {
								"shortText": "The name of the bounded context the aggregate belongs to\n"
							},
							"type": {
								"type": "reference",
								"name": "Readonly",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/snapshotUtils.ts",
					"line": 6,
					"character": 32
				}
			]
		},
		{
			"id": 448,
			"name": "isValidAggregateCommand",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"signatures": [
				{
					"id": 449,
					"name": "isValidAggregateCommand",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 450,
							"name": "command",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/validateDefinition.ts",
					"line": 131,
					"character": 29
				}
			]
		},
		{
			"id": 451,
			"name": "isValidAggregateQuery",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"signatures": [
				{
					"id": 452,
					"name": "isValidAggregateQuery",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 453,
							"name": "query",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/validateDefinition.ts",
					"line": 146,
					"character": 27
				}
			]
		},
		{
			"id": 445,
			"name": "isValidDomainEventConstructor",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"signatures": [
				{
					"id": 446,
					"name": "isValidDomainEventConstructor",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 447,
							"name": "ctor",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/validateDefinition.ts",
					"line": 122,
					"character": 35
				}
			]
		},
		{
			"id": 433,
			"name": "isValidIdentity",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 434,
					"name": "isValidIdentity",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 435,
							"name": "str",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/validateConstructorProps.ts",
					"line": 37,
					"character": 31
				}
			]
		},
		{
			"id": 20,
			"name": "isValidName",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 21,
					"name": "isValidName",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 22,
							"name": "x",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "utils/isValidName.ts",
					"line": 3,
					"character": 27
				}
			]
		},
		{
			"id": 442,
			"name": "isValidSerializedDomainEvent",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 443,
					"name": "isValidSerializedDomainEvent",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 444,
							"name": "event",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/validateConstructorProps.ts",
					"line": 59,
					"character": 44
				}
			]
		},
		{
			"id": 436,
			"name": "isValidSnapshot",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 437,
					"name": "isValidSnapshot",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 438,
							"name": "snapshot",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/validateConstructorProps.ts",
					"line": 41,
					"character": 31
				}
			]
		},
		{
			"id": 561,
			"name": "padLeftWithZeroes",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 562,
					"name": "padLeftWithZeroes",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 563,
							"name": "i",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 564,
							"name": "minLength",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "Repository/InMemoryEventStore.ts",
					"line": 106,
					"character": 30
				}
			]
		},
		{
			"id": 32,
			"name": "parseErrorStack",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 33,
					"name": "parseErrorStack",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 34,
							"name": "errorName",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 35,
							"name": "stack",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "reference",
								"name": "ReadonlyArray",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								]
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "CustomError/index.ts",
					"line": 45,
					"character": 28
				}
			]
		},
		{
			"id": 570,
			"name": "toSerial",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isConst": true
			},
			"signatures": [
				{
					"id": 571,
					"name": "toSerial",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 572,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"originalName": "__0",
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 573,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 574,
											"name": "context",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Repository/validateAggregatesList.ts",
													"line": 12,
													"character": 9
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 576,
											"name": "identity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Repository/validateAggregatesList.ts",
													"line": 14,
													"character": 10
												}
											],
											"type": {
												"type": "union",
												"types": [
													{
														"type": "intrinsic",
														"name": "undefined"
													},
													{
														"type": "intrinsic",
														"name": "string"
													}
												]
											}
										},
										{
											"id": 575,
											"name": "type",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Repository/validateAggregatesList.ts",
													"line": 13,
													"character": 6
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												574,
												576,
												575
											]
										}
									],
									"sources": [
										{
											"fileName": "Repository/validateAggregatesList.ts",
											"line": 11,
											"character": 18
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"sources": [
				{
					"fileName": "Repository/validateAggregatesList.ts",
					"line": 11,
					"character": 14
				}
			]
		},
		{
			"id": 408,
			"name": "tuple",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"signatures": [
				{
					"id": 409,
					"name": "tuple",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"typeParameter": [
						{
							"id": 410,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"name": "TupleItem",
									"id": 407
								}
							}
						}
					],
					"parameters": [
						{
							"id": 411,
							"name": "args",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isRest": true
							},
							"type": {
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "array",
									"elementType": {
										"type": "reference",
										"name": "TupleItem",
										"id": 407
									}
								}
							}
						}
					],
					"type": {
						"type": "unknown",
						"name": "T"
					}
				}
			],
			"sources": [
				{
					"fileName": "utils/tuple.ts",
					"line": 4,
					"character": 18
				}
			]
		},
		{
			"id": 577,
			"name": "validateAggregatesList",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 578,
					"name": "validateAggregatesList",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 579,
							"name": "aggregates",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "Repository/validateAggregatesList.ts",
					"line": 21,
					"character": 46
				}
			]
		},
		{
			"id": 425,
			"name": "validateConstructorProps",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 426,
					"name": "validateConstructorProps",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 427,
							"name": "__namedParameters",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"originalName": "__0",
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 428,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {},
									"children": [
										{
											"id": 429,
											"name": "events",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Aggregate/validateConstructorProps.ts",
													"line": 14,
													"character": 8
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 430,
											"name": "identity",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Aggregate/validateConstructorProps.ts",
													"line": 15,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										},
										{
											"id": 431,
											"name": "isSingleton",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Aggregate/validateConstructorProps.ts",
													"line": 16,
													"character": 13
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "boolean"
											}
										},
										{
											"id": 432,
											"name": "snapshot",
											"kind": 32,
											"kindString": "Variable",
											"flags": {},
											"sources": [
												{
													"fileName": "Aggregate/validateConstructorProps.ts",
													"line": 17,
													"character": 10
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												429,
												430,
												431,
												432
											]
										}
									],
									"sources": [
										{
											"fileName": "Aggregate/validateConstructorProps.ts",
											"line": 13,
											"character": 49
										}
									]
								}
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "Aggregate/validateConstructorProps.ts",
					"line": 13,
					"character": 48
				}
			]
		},
		{
			"id": 24,
			"name": "validateDefinition",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true
			},
			"signatures": [
				{
					"id": 25,
					"name": "validateDefinition",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {},
					"parameters": [
						{
							"id": 26,
							"name": "definition",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {},
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "void"
					}
				}
			],
			"sources": [
				{
					"fileName": "CustomError/validateDefinition.ts",
					"line": 6,
					"character": 42
				},
				{
					"fileName": "Aggregate/validateDefinition.ts",
					"line": 14,
					"character": 42
				},
				{
					"fileName": "DomainEvent/validateDefinition.ts",
					"line": 6,
					"character": 42
				},
				{
					"fileName": "Repository/validateDefinition.ts",
					"line": 4,
					"character": 42
				}
			]
		}
	],
	"groups": [
		{
			"title": "Interfaces",
			"kind": 256,
			"children": [
				149,
				242,
				493,
				202,
				105,
				199,
				263,
				139,
				342,
				420,
				1,
				296,
				309,
				322,
				367,
				36,
				382,
				501,
				497,
				390,
				522,
				526,
				293,
				512,
				565,
				454
			]
		},
		{
			"title": "Type aliases",
			"kind": 4194304,
			"children": [
				185,
				99,
				78,
				165,
				164,
				191,
				179,
				163,
				94,
				85,
				72,
				74,
				91,
				281,
				131,
				116,
				114,
				134,
				128,
				113,
				115,
				282,
				280,
				279,
				177,
				283,
				5,
				14,
				4,
				17,
				44,
				285,
				332,
				331,
				83,
				333,
				340,
				70,
				10,
				284,
				289,
				6,
				540,
				124,
				126,
				60,
				545,
				407
			]
		},
		{
			"title": "Variables",
			"kind": 32,
			"children": [
				459,
				465,
				481,
				580,
				38,
				458,
				592,
				598,
				586,
				610,
				604,
				457,
				456,
				54,
				23
			]
		},
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				471,
				355,
				27,
				487,
				376,
				385,
				553,
				568,
				397,
				616,
				439,
				403,
				49,
				65,
				416,
				412,
				448,
				451,
				445,
				433,
				20,
				442,
				436,
				561,
				32,
				570,
				408,
				577,
				425,
				24
			]
		}
	]
}